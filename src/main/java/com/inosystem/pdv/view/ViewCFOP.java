/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inosystem.pdv.view;

import controller.ControllerCFOP;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCFOP;
import util.BLMascaras;

/**
 *
 * @author Jrpbjr
 */
public class ViewCFOP extends javax.swing.JFrame {

    ControllerCFOP controllerCFOP = new ControllerCFOP();
    ModelCFOP modelCFOP = new ModelCFOP();
    ArrayList<ModelCFOP> listaModelCFOPs = new ArrayList<>();
    String tipoCadastro = "novo";
    BLMascaras bLMascaras = new BLMascaras();
    /**
     * Creates new form ViewCFOP
     */
    public ViewCFOP() {
        initComponents();
        carregarCFOP();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jrEstadual = new javax.swing.JRadioButton();
        jrinterestadual = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jcFaturamento = new javax.swing.JCheckBox();
        jcFinanceiro = new javax.swing.JCheckBox();
        jtfDescricao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfObservacao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCFOP = new javax.swing.JTable();
        jbLimpar = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jtfCodigoOperacao = new javax.swing.JFormattedTextField();
        jtfSequencia = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Código Fiscal de Operação");

        jLabel1.setText("Código");

        jtfCodigo.setEnabled(false);

        jLabel2.setText("Cod. Fiscal de Ope.:");

        jLabel3.setText("Sequencia:");

        jLabel4.setText("Operação:");

        buttonGroup1.add(jrEstadual);
        jrEstadual.setSelected(true);
        jrEstadual.setText("Estadual");

        buttonGroup1.add(jrinterestadual);
        jrinterestadual.setText("Interestadual");

        jLabel5.setText("Movimentação");

        jcFaturamento.setSelected(true);
        jcFaturamento.setText("Faturamento");

        jcFinanceiro.setText("Financeiro");

        jtfDescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescricaoFocusLost(evt);
            }
        });

        jLabel6.setText("Descrição/Nome:");

        jLabel7.setText("Observação:");

        jtfObservacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfObservacaoFocusLost(evt);
            }
        });

        jtCFOP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Cod.Fiscal", "Descrição/Nome"
            }
        ));
        jtCFOP.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jtCFOP);
        if (jtCFOP.getColumnModel().getColumnCount() > 0) {
            jtCFOP.getColumnModel().getColumn(0).setMinWidth(80);
            jtCFOP.getColumnModel().getColumn(0).setPreferredWidth(80);
            jtCFOP.getColumnModel().getColumn(0).setMaxWidth(80);
            jtCFOP.getColumnModel().getColumn(1).setMinWidth(80);
            jtCFOP.getColumnModel().getColumn(1).setPreferredWidth(80);
            jtCFOP.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-fechar-janela-filled-50.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-salvar-filled-50.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-editar-filled-50.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jtfCodigoOperacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jtfSequencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jtfCodigoOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrEstadual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrinterestadual))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcFaturamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcFinanceiro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfDescricao))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel6))
                    .addComponent(jLabel7)
                    .addComponent(jtfObservacao)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalvar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrEstadual)
                    .addComponent(jrinterestadual)
                    .addComponent(jtfCodigoOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcFaturamento)
                    .addComponent(jcFinanceiro)
                    .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLimpar)
                    .addComponent(jbSalvar)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if (tipoCadastro.equals("novo")) {
            salvar();
        } else if (tipoCadastro.equals("alteracao")) {
            alterar();
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        limparTela();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jtCFOP.getSelectedRow();
        int codigo = (Integer) jtCFOP.getValueAt(linhaSelecionada, 0);
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            limparTela();
            modelCFOP = new ModelCFOP();
            modelCFOP = controllerCFOP.getCFOPController(codigo);
            jtfCodigo.setText(modelCFOP.getCodigo() + "");
            jtfCodigoOperacao.setText(modelCFOP.getCfop() + "");
            jtfSequencia.setText(modelCFOP.getSequeCfop() + "");
            if (modelCFOP.getOperacao().equals("E")) {
                jrEstadual.setSelected(true);
            } else {
                jrinterestadual.setSelected(true);
            }
            if (modelCFOP.getFaturamento() == 1) {
                jcFaturamento.setSelected(true);
            } else {
                jcFaturamento.setSelected(false);
            }
            if (modelCFOP.getFinanceiro() == 1) {
                jcFinanceiro.setSelected(true);
            } else {
                jcFinanceiro.setSelected(false);
            }
            jtfDescricao.setText(modelCFOP.getDescricao());
            jtfObservacao.setText(modelCFOP.getObservacao());
            tipoCadastro = "alteracao";
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = jtCFOP.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            String nome = (String) jtCFOP.getValueAt(linha, 2);
            int codigo = (Integer) jtCFOP.getValueAt(linha, 0);
            //pegunta se realmente deseja excluir
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                    + " excluir o registro \nNome: "
                    + nome + " ?", "Atenção", JOptionPane.YES_NO_OPTION);
            //se sim exclui, se não não faz nada
            if (opcao == JOptionPane.OK_OPTION) {
                if (controllerCFOP.excluirCFOPController(codigo)) {
                    JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                    carregarCFOP();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtfDescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescricaoFocusLost
        // converte em maiusculo o que o usuario digitar
        this.jtfDescricao.setText(jtfDescricao.getText().toUpperCase());
        //tira acentos
        this.jtfDescricao.setText(bLMascaras.TiraAcentos(jtfDescricao.getText()));
    }//GEN-LAST:event_jtfDescricaoFocusLost

    private void jtfObservacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfObservacaoFocusLost
        // converte em maiusculo o que o usuario digitar
        this.jtfObservacao.setText(jtfObservacao.getText().toUpperCase());
        //tira acentos
        this.jtfObservacao.setText(bLMascaras.TiraAcentos(jtfObservacao.getText()));
    }//GEN-LAST:event_jtfObservacaoFocusLost

    private void limparTela() {
        tipoCadastro = "novo";
        jtfCodigo.setText("");
        jtfCodigoOperacao.setText("");
        jtfSequencia.setText("");
        jtfDescricao.setText("");
        jtfObservacao.setText("");
        jrEstadual.setSelected(true);
        jcFaturamento.setSelected(true);
        jcFinanceiro.setSelected(false);
        carregarCFOP();
    }

    private void alterar() {
        modelCFOP = new ModelCFOP();
        modelCFOP.setCodigo(Integer.parseInt(jtfCodigo.getText()));
        modelCFOP.setCfop(Integer.parseInt(jtfCodigoOperacao.getText()));
        modelCFOP.setSequeCfop(Integer.parseInt(jtfSequencia.getText()));
        if (jrEstadual.isSelected()) {
            modelCFOP.setOperacao("E");
        } else {
            modelCFOP.setOperacao("I");
        }
        if (jcFaturamento.isSelected()) {
            modelCFOP.setFaturamento(1);
        } else {
            modelCFOP.setFaturamento(0);
        }
        if (jcFinanceiro.isSelected()) {
            modelCFOP.setFinanceiro(1);
        } else {
            modelCFOP.setFinanceiro(0);
        }
        modelCFOP.setDescricao(jtfDescricao.getText());
        modelCFOP.setObservacao(jtfObservacao.getText());

        if (controllerCFOP.atualizarCFOPController(modelCFOP)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            limparTela();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void salvar() {
        modelCFOP = new ModelCFOP();
        modelCFOP.setCfop(Integer.parseInt(jtfCodigoOperacao.getText()));
        modelCFOP.setSequeCfop(Integer.parseInt(jtfSequencia.getText()));
        if (jrEstadual.isSelected()) {
            modelCFOP.setOperacao("E");
        } else {
            modelCFOP.setOperacao("I");
        }
        if (jcFaturamento.isSelected()) {
            modelCFOP.setFaturamento(1);
        } else {
            modelCFOP.setFaturamento(0);
        }
        if (jcFinanceiro.isSelected()) {
            modelCFOP.setFinanceiro(1);
        } else {
            modelCFOP.setFinanceiro(0);
        }
        modelCFOP.setDescricao(jtfDescricao.getText());
        modelCFOP.setObservacao(jtfObservacao.getText());

        if (controllerCFOP.salvarCFOPController(modelCFOP) > 0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            limparTela();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregarCFOP() {
        listaModelCFOPs = controllerCFOP.getListaCFOPController();
        DefaultTableModel modelo = (DefaultTableModel) jtCFOP.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaModelCFOPs.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelCFOPs.get(i).getCodigo(),
                listaModelCFOPs.get(i).getCfop(),
                listaModelCFOPs.get(i).getDescricao()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCFOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCFOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCFOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCFOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCFOP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JCheckBox jcFaturamento;
    private javax.swing.JCheckBox jcFinanceiro;
    private javax.swing.JRadioButton jrEstadual;
    private javax.swing.JRadioButton jrinterestadual;
    private javax.swing.JTable jtCFOP;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JFormattedTextField jtfCodigoOperacao;
    private javax.swing.JTextField jtfDescricao;
    private javax.swing.JTextField jtfObservacao;
    private javax.swing.JFormattedTextField jtfSequencia;
    // End of variables declaration//GEN-END:variables
}
