package com.inosystem.pdv.view;

import com.inosystem.pdv.contoller.CaixaController;
import com.inosystem.pdv.contoller.ClienteController;
import com.inosystem.pdv.contoller.FormaPagamentoController;
import com.inosystem.pdv.contoller.ProdutoController;
import com.inosystem.pdv.contoller.VendaController;
import com.inosystem.pdv.model.Caixa;
import com.inosystem.pdv.model.Cliente;
import com.inosystem.pdv.model.Config;
import com.inosystem.pdv.model.FormaPagamento;
import com.inosystem.pdv.model.Produto;
import com.inosystem.pdv.model.SessaoUsuario;
import com.inosystem.pdv.model.Venda;
import com.inosystem.pdv.util.AtualizadorHorario;
import com.inosystem.pdv.util.ManipularXML;
import com.inosystem.pdv.util.Mascara;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jrpbjr
 */
public class ViewPdv extends javax.swing.JFrame {

    VendaController controllerVendas = new VendaController();
    Venda modelVendas = new Venda();
    Produto modelProdutos = new Produto();
    ArrayList<Venda> listaVenda = new ArrayList<>();
    ArrayList<Cliente> listaClientes = new ArrayList<>();
    ArrayList<Produto> listaProdutoses = new ArrayList<>();
    ClienteController controllerCliente = new ClienteController();
    ProdutoController controllerProdutos = new ProdutoController();
    FormaPagamentoController controllerTipoPagamento = new FormaPagamentoController();
    Caixa modelCaixa = new Caixa();
    CaixaController controllerCaixa = new CaixaController();
    ArrayList<FormaPagamento> listaModelTipoPagamentos = new ArrayList<>();
    Mascara bLMascaras = new Mascara();
    float valorCartao, valorCheque, valorDinheiro, valorVale;
    public float quantidadeProduto;
    public int codigoProduto;
    private int returnStatus;
    public float valorTotal;
    private double valorCusto;
    private ViewPagamentoPDV viewPagamentoPDV;
    public float desconto;
    public int codigoVenda;
    String pNomeUsuario;
    private int numeroCaixa;
    private int codigoCaixa;
    private java.awt.Image imagemB = null;
    //lerxml
    Config modelConfig = new Config();

    /**
     * Creates new form ViewPdv
     */
    public ViewPdv() {
        initComponents();
        quantidadeProduto = 1;
        jlQuantidadeProduto.setText(quantidadeProduto + "");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.viewPagamentoPDV = new ViewPagamentoPDV(this, true);
        jtfCodigoProduto.grabFocus();
        mostrarHora();
        configurar();
        //pegar os dados do xml
        modelConfig = ManipularXML.lerXmlConfig();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        painelGeral = new javax.swing.JPanel();
        painelBarraSuperior = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jlModoInsercao = new javax.swing.JLabel();
        jlModoImpressao = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        painelNomeProduto = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jlNomeProduto = new javax.swing.JLabel();
        painelNCaixa = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jlNumeroCaixa = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jlOperador = new javax.swing.JLabel();
        jlDataHora = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfStatusCaixa = new javax.swing.JLabel();
        painelBarraInferior = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        painelCentralTab = new javax.swing.JPanel();
        jlImagem = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        painelValorTotal = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        painelNItens = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jlNumeroItens = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jlQuantidadeProduto = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfValorPagar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmArquivo = new javax.swing.JMenu();
        jmiSair = new javax.swing.JMenuItem();
        jmComandos = new javax.swing.JMenu();
        jmiModoInsercao = new javax.swing.JMenuItem();
        jmiAlterarQuantidade = new javax.swing.JMenuItem();
        jmiFinalizarVenda = new javax.swing.JMenuItem();
        jmiPesquisarProduto = new javax.swing.JMenuItem();
        jmiEstoque = new javax.swing.JMenuItem();
        jmiCancelarProduto = new javax.swing.JMenuItem();
        jmiImprimirCupom = new javax.swing.JMenuItem();
        jmiModoImpressao = new javax.swing.JMenuItem();

        jLabel13.setText("jLabel13");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BLVendas PDV");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/blicon.png")).getImage());
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(934, 591));
        setResizable(false);

        painelGeral.setBackground(new java.awt.Color(255, 255, 255));

        painelBarraSuperior.setBackground(new java.awt.Color(25, 116, 187));

        jLabel2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("[F2]Inserção de Produtos por:");

        jlModoInsercao.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jlModoInsercao.setForeground(new java.awt.Color(255, 255, 255));
        jlModoInsercao.setText("Código de Barras");

        jlModoImpressao.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jlModoImpressao.setForeground(new java.awt.Color(255, 255, 255));
        jlModoImpressao.setText("Sim");

        jLabel25.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("[F11]Imprimir Cupom:");

        javax.swing.GroupLayout painelBarraSuperiorLayout = new javax.swing.GroupLayout(painelBarraSuperior);
        painelBarraSuperior.setLayout(painelBarraSuperiorLayout);
        painelBarraSuperiorLayout.setHorizontalGroup(
            painelBarraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBarraSuperiorLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlModoInsercao)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlModoImpressao)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        painelBarraSuperiorLayout.setVerticalGroup(
            painelBarraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBarraSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jlModoInsercao)
                .addComponent(jlModoImpressao)
                .addComponent(jLabel25))
        );

        painelNomeProduto.setBackground(new java.awt.Color(25, 116, 187));

        jLabel18.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Produto:");

        jlNomeProduto.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 25)); // NOI18N
        jlNomeProduto.setForeground(new java.awt.Color(255, 255, 255));
        jlNomeProduto.setText("NOME DO PRODUTO");

        painelNCaixa.setBackground(new java.awt.Color(0, 153, 102));

        jLabel12.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Caixa:");

        jlNumeroCaixa.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        jlNumeroCaixa.setForeground(new java.awt.Color(255, 255, 255));
        jlNumeroCaixa.setText("1");

        jLabel14.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Operador:");

        jlOperador.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jlOperador.setForeground(new java.awt.Color(255, 255, 255));
        jlOperador.setText("nome do operador");

        jlDataHora.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jlDataHora.setForeground(new java.awt.Color(255, 255, 255));
        jlDataHora.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlDataHora.setText("hora");

        jLabel4.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data/Hora:");

        javax.swing.GroupLayout painelNCaixaLayout = new javax.swing.GroupLayout(painelNCaixa);
        painelNCaixa.setLayout(painelNCaixaLayout);
        painelNCaixaLayout.setHorizontalGroup(
            painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelNCaixaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDataHora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelNCaixaLayout.createSequentialGroup()
                        .addComponent(jlNumeroCaixa)
                        .addContainerGap())
                    .addComponent(jlOperador, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))
        );
        painelNCaixaLayout.setVerticalGroup(
            painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelNCaixaLayout.createSequentialGroup()
                .addGroup(painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jlNumeroCaixa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jlOperador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelNCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDataHora)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28))
        );

        jtfStatusCaixa.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 30)); // NOI18N
        jtfStatusCaixa.setForeground(new java.awt.Color(255, 255, 255));
        jtfStatusCaixa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtfStatusCaixa.setText("Caixa Livre");

        javax.swing.GroupLayout painelNomeProdutoLayout = new javax.swing.GroupLayout(painelNomeProduto);
        painelNomeProduto.setLayout(painelNomeProdutoLayout);
        painelNomeProdutoLayout.setHorizontalGroup(
            painelNomeProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelNomeProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelNomeProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelNomeProdutoLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jtfStatusCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelNCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        painelNomeProdutoLayout.setVerticalGroup(
            painelNomeProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelNomeProdutoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelNomeProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jlNomeProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfStatusCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(painelNomeProdutoLayout.createSequentialGroup()
                .addComponent(painelNCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        painelBarraInferior.setBackground(new java.awt.Color(88, 85, 112));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("[F4]Finalizar venda");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("[F5]Pesquisar produto");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("[F6]Verificar estoque");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("[F8]Imprimir cupom manual");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("[F9]Sair");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("[F7]Cancelar produto");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("[F3]Alterar quantidade");

        javax.swing.GroupLayout painelBarraInferiorLayout = new javax.swing.GroupLayout(painelBarraInferior);
        painelBarraInferior.setLayout(painelBarraInferiorLayout);
        painelBarraInferiorLayout.setHorizontalGroup(
            painelBarraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBarraInferiorLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(0, 59, Short.MAX_VALUE))
        );
        painelBarraInferiorLayout.setVerticalGroup(
            painelBarraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelBarraInferiorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(painelBarraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15)))
        );

        painelCentralTab.setBackground(new java.awt.Color(255, 255, 255));

        jlImagem.setBackground(new java.awt.Color(255, 255, 255));
        jlImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produto sem imagem.jpg"))); // NOI18N

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logo blvendas pro3.png"))); // NOI18N

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setBackground(new java.awt.Color(255, 255, 204));
        tbProdutos.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Codigo Barras", "Nome", "Quant.", "Valor Unit.", "Valor Tot."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbProdutos.setRowSelectionAllowed(false);
        tbProdutos.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tbProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(0).setMinWidth(60);
            tbProdutos.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbProdutos.getColumnModel().getColumn(0).setMaxWidth(60);
            tbProdutos.getColumnModel().getColumn(1).setMinWidth(0);
            tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tbProdutos.getColumnModel().getColumn(1).setMaxWidth(0);
            tbProdutos.getColumnModel().getColumn(2).setMinWidth(150);
            tbProdutos.getColumnModel().getColumn(2).setPreferredWidth(150);
            tbProdutos.getColumnModel().getColumn(2).setMaxWidth(150);
            tbProdutos.getColumnModel().getColumn(3).setPreferredWidth(400);
            tbProdutos.getColumnModel().getColumn(4).setMinWidth(80);
            tbProdutos.getColumnModel().getColumn(4).setPreferredWidth(80);
            tbProdutos.getColumnModel().getColumn(4).setMaxWidth(80);
            tbProdutos.getColumnModel().getColumn(5).setMinWidth(100);
            tbProdutos.getColumnModel().getColumn(5).setPreferredWidth(100);
            tbProdutos.getColumnModel().getColumn(5).setMaxWidth(100);
            tbProdutos.getColumnModel().getColumn(6).setMinWidth(100);
            tbProdutos.getColumnModel().getColumn(6).setPreferredWidth(100);
            tbProdutos.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        javax.swing.GroupLayout painelCentralTabLayout = new javax.swing.GroupLayout(painelCentralTab);
        painelCentralTab.setLayout(painelCentralTabLayout);
        painelCentralTabLayout.setHorizontalGroup(
            painelCentralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCentralTabLayout.createSequentialGroup()
                .addGroup(painelCentralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE))
        );
        painelCentralTabLayout.setVerticalGroup(
            painelCentralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCentralTabLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        painelValorTotal.setBackground(new java.awt.Color(25, 116, 187));

        jLabel17.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("VALOR TOTAL");

        painelNItens.setBackground(new java.awt.Color(0, 153, 102));
        painelNItens.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Nº de Itens");
        painelNItens.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jlNumeroItens.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jlNumeroItens.setForeground(new java.awt.Color(255, 255, 255));
        jlNumeroItens.setText("0");
        painelNItens.add(jlNumeroItens, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Código Produto");

        jtfCodigoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodigoProduto.setToolTipText("");
        jtfCodigoProduto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jtfCodigoProduto.setMaximumSize(new java.awt.Dimension(6, 50));
        jtfCodigoProduto.setName(""); // NOI18N
        jtfCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoProdutoActionPerformed(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 30)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("X");

        jlQuantidadeProduto.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 30)); // NOI18N
        jlQuantidadeProduto.setForeground(new java.awt.Color(255, 255, 255));
        jlQuantidadeProduto.setText("1.0");

        jLabel3.setBackground(new java.awt.Color(0, 153, 102));
        jLabel3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("R$");
        jLabel3.setOpaque(true);

        jtfValorPagar.setBackground(new java.awt.Color(0, 153, 102));
        jtfValorPagar.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 30)); // NOI18N
        jtfValorPagar.setForeground(new java.awt.Color(255, 255, 255));
        jtfValorPagar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jtfValorPagar.setText("0.0");
        jtfValorPagar.setOpaque(true);

        javax.swing.GroupLayout painelValorTotalLayout = new javax.swing.GroupLayout(painelValorTotal);
        painelValorTotal.setLayout(painelValorTotalLayout);
        painelValorTotalLayout.setHorizontalGroup(
            painelValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelValorTotalLayout.createSequentialGroup()
                .addComponent(painelNItens, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlQuantidadeProduto)
                .addGap(40, 40, 40)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfValorPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        painelValorTotalLayout.setVerticalGroup(
            painelValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelValorTotalLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jtfValorPagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(painelNItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelValorTotalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelValorTotalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jlQuantidadeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout painelGeralLayout = new javax.swing.GroupLayout(painelGeral);
        painelGeral.setLayout(painelGeralLayout);
        painelGeralLayout.setHorizontalGroup(
            painelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGeralLayout.createSequentialGroup()
                .addGroup(painelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelBarraInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelCentralTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelNomeProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBarraSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelValorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        painelGeralLayout.setVerticalGroup(
            painelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGeralLayout.createSequentialGroup()
                .addComponent(painelBarraSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelCentralTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23)
                .addComponent(painelValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBarraInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jmArquivo.setText("Arquivo");
        jmArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmArquivoActionPerformed(evt);
            }
        });

        jmiSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiSair);

        jMenuBar1.add(jmArquivo);

        jmComandos.setText("Comandos");

        jmiModoInsercao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jmiModoInsercao.setText("Trocar modo de inserção");
        jmiModoInsercao.setToolTipText("Trocar modo inserir por código de barras ou código do produto");
        jmiModoInsercao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModoInsercaoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiModoInsercao);

        jmiAlterarQuantidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jmiAlterarQuantidade.setText("Alterar Quantidade");
        jmiAlterarQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarQuantidadeActionPerformed(evt);
            }
        });
        jmComandos.add(jmiAlterarQuantidade);

        jmiFinalizarVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jmiFinalizarVenda.setText("Finalizar Venda");
        jmiFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFinalizarVendaActionPerformed(evt);
            }
        });
        jmComandos.add(jmiFinalizarVenda);

        jmiPesquisarProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jmiPesquisarProduto.setText("Pesquisar Produto");
        jmiPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPesquisarProdutoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiPesquisarProduto);

        jmiEstoque.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jmiEstoque.setText("Verificar Estoque");
        jmiEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEstoqueActionPerformed(evt);
            }
        });
        jmComandos.add(jmiEstoque);

        jmiCancelarProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jmiCancelarProduto.setText("Cancelar Produto");
        jmiCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCancelarProdutoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiCancelarProduto);

        jmiImprimirCupom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jmiImprimirCupom.setText("Imprimir Cupom");
        jmiImprimirCupom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprimirCupomActionPerformed(evt);
            }
        });
        jmComandos.add(jmiImprimirCupom);

        jmiModoImpressao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
        jmiModoImpressao.setText("Modo de Impresão");
        jmiModoImpressao.setToolTipText("Enviar ou não cupom para impressora");
        jmiModoImpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModoImpressaoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiModoImpressao);

        jMenuBar1.add(jmComandos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmArquivoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jmArquivoActionPerformed

    private void jmiEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEstoqueActionPerformed
        // TODO add your handling code here:
        new ViewEstoquePDV().setVisible(true);
    }//GEN-LAST:event_jmiEstoqueActionPerformed

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
        // TODO add your handling code here:
        keyPressed(evt);
        this.jtfValorPagar.setText(new Mascara().arredondamentoComPontoDuasCasas(this.somaEAtualizaValorTotal()) + "");
        statusCaixa();
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jtfCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoActionPerformed
        // TODO add your handling code here:
        statusCaixa();
    }//GEN-LAST:event_jtfCodigoProdutoActionPerformed

    private void jmiAlterarQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarQuantidadeActionPerformed
        // TODO add your handling code here:
        ViewQuantidadePDV viewQuantidadePDV = new ViewQuantidadePDV(this, rootPaneCheckingEnabled);
        viewQuantidadePDV.setVisible(true);
        quantidadeProduto = viewQuantidadePDV.getReturnStatus();
        jlQuantidadeProduto.setText(quantidadeProduto + "");
    }//GEN-LAST:event_jmiAlterarQuantidadeActionPerformed

    private void jmiCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCancelarProdutoActionPerformed
        JComboBox jcb = new JComboBox();
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            jcb.addItem(i + 1);
        }
        JOptionPane.showMessageDialog(null, jcb, "Selecione o item para cancelar!", JOptionPane.QUESTION_MESSAGE);

        int item = Integer.parseInt(jcb.getSelectedItem().toString());
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o item: " + item + " ?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            // Remove a linha
            modelo.removeRow(item - 1);
            //readiciona todos
            renumerarItens();
            this.jtfValorPagar.setText(new Mascara().arredondamentoComPontoDuasCasas(this.somaEAtualizaValorTotal()) + "");
        }
    }//GEN-LAST:event_jmiCancelarProdutoActionPerformed

    private void jmiFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFinalizarVendaActionPerformed
        if (tbProdutos.getRowCount() != 0) {
            double pvalorCusto = 0;
            for (int i = 0; i < tbProdutos.getRowCount(); i++) {
                pvalorCusto += controllerProdutos.getProdutosController(Integer.parseInt(tbProdutos.getValueAt(i, 1).toString())).getValorCusto();
            }
            viewPagamentoPDV.setValorCusto((float) pvalorCusto);
            viewPagamentoPDV.setValorTotal(Float.parseFloat(this.jtfValorPagar.getText()));
            viewPagamentoPDV.setTextFildValorTotal();
            viewPagamentoPDV.setVisible(true);
            zerarValoresCaixa();
            if (viewPagamentoPDV.getReturnStatus() == 1) {
                salvarVenda();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não existe produtos na tabela!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jmiFinalizarVendaActionPerformed

    private void jmiPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPesquisarProdutoActionPerformed
        // TODO add your handling code here:
        ViewPesquisarProdutoPDV viewPesquisarProduto = new ViewPesquisarProdutoPDV(this, rootPaneCheckingEnabled);
        viewPesquisarProduto.setVisible(true);
        codigoProduto = viewPesquisarProduto.getReturnStatus();
        this.adicionarProdutoPesquisa(codigoProduto);
        this.jtfValorPagar.setText(new Mascara().arredondamentoComPontoDuasCasas(this.somaEAtualizaValorTotal()) + "");
    }//GEN-LAST:event_jmiPesquisarProdutoActionPerformed

    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jmiImprimirCupomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprimirCupomActionPerformed
        // TODO add your handling code here:
        new ViewImprimirPDV(this, rootPaneCheckingEnabled).setVisible(true);

    }//GEN-LAST:event_jmiImprimirCupomActionPerformed

    private void jmiModoImpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModoImpressaoActionPerformed
        if (jlModoImpressao.getText().equals("Sim")) {
            jlModoImpressao.setText("Não");
        } else {
            jlModoImpressao.setText("Sim");
        }
    }//GEN-LAST:event_jmiModoImpressaoActionPerformed

    private void jmiModoInsercaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModoInsercaoActionPerformed
        // TODO add your handling code here:
        if (jlModoInsercao.getText().equals("Código de Barras")) {
            jlModoInsercao.setText("Código do Produto");
        } else {
            jlModoInsercao.setText("Código de Barras");
        }
    }//GEN-LAST:event_jmiModoInsercaoActionPerformed

    private void renumerarItens() {
        listaProdutoses = new ArrayList<>();
        int quantLinhas = tbProdutos.getRowCount();
        for (int i = 0; i < quantLinhas; i++) {
            tbProdutos.setValueAt(i + 1, i, 0);
        }
        jlNumeroItens.setText(quantLinhas + "");
    }

    public void statusCaixa() {
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        if (modelo.getRowCount() < 1) {
            jtfStatusCaixa.setText("Caixa Livre");
        } else {
            jtfStatusCaixa.setText("Venda em Aberta");
        }
    }

    public void mostrarHora() {
        AtualizadorHorario ah = new AtualizadorHorario(jlDataHora);
        ah.mostrarData(true);
        Thread thHora = ah;
        thHora.start();
    }

    private void adicionarValorCaixa() {
        modelCaixa = new Caixa();
        modelCaixa = controllerCaixa.verificarRetorarCaixaControler(numeroCaixa);
        modelCaixa.setDinheiro(bLMascaras.arredondamentoComPontoDuasCasasDouble(modelCaixa.getDinheiro().floatValue() + viewPagamentoPDV.getDinheiro()));
        modelCaixa.setCartao(bLMascaras.arredondamentoComPontoDuasCasasDouble(modelCaixa.getCartao().floatValue() + viewPagamentoPDV.getCartao()));
        modelCaixa.setCheque(bLMascaras.arredondamentoComPontoDuasCasasDouble(modelCaixa.getCheque().floatValue() + viewPagamentoPDV.getCheque()));
        modelCaixa.setConvenio(bLMascaras.arredondamentoComPontoDuasCasasDouble(modelCaixa.getConvenio().floatValue() + viewPagamentoPDV.getConvenio()));

        controllerCaixa.atualizarCaixaPDVController(modelCaixa);
    }

    private void zerarValoresCaixa() {
        valorCartao = 0;
        valorCheque = 0;
        valorDinheiro = 0;
        valorVale = 0;
    }

    //PEGA LETRAS DIGITADAS       
    public void keyPressed(java.awt.event.KeyEvent e) {
        if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            try {
                //verificar se vai pesquisar por código de barras ou código do produto
                if (jlModoInsercao.getText().equals("Código de Barras")) {
                    //código de barras
                    modelProdutos = controllerProdutos.getProdutosCodigoBarrasController(this.jtfCodigoProduto.getText());
                } else {
                    modelProdutos = controllerProdutos.getProdutosController(Integer.parseInt(this.jtfCodigoProduto.getText()));
                }
                //setar nome produto
                jlNomeProduto.setText(modelProdutos.getNome());

                // INICIO verifica se jai foi inserido um produto igual
                if (modelProdutos.getCodigo() != 0) {
                    for (int i = 0; i < modelo.getRowCount(); i++) {
                        if (modelo.getValueAt(i, 1).toString().equals(jtfCodigoProduto.getText())
                                || modelo.getValueAt(i, 2).toString().equals(jtfCodigoProduto.getText())) {
                            quantidadeProduto += (float) modelo.getValueAt(i, 4);
                            modelo.removeRow(i);
                        }
                    }
                }
                // FIM verifica se jai foi inserido um produto igual

                //carregar imagem produto
                //recuperar imagem e pintar
                this.imagemB = Toolkit.getDefaultToolkit().createImage(modelProdutos.getImagemProduto());
                this.pintarImagem();

                float valorArredondado = (float) (modelProdutos.getValor() * quantidadeProduto);
                double valorArredondadoFinal = bLMascaras.arredondamentoComPontoDuasCasasDouble(valorArredondado);

                modelo.addRow(new Object[]{
                    modelo.getRowCount() + 1,
                    modelProdutos.getCodigo(),
                    modelProdutos.getCodigoBarrasEan(),
                    modelProdutos.getNome(),
                    quantidadeProduto,
                    modelProdutos.getValor(),
                    valorArredondadoFinal
                });

                renumerarItens();

                quantidadeProduto = 1;
                jlQuantidadeProduto.setText(quantidadeProduto + "");
                this.jtfCodigoProduto.setText(null);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Não existe produto com este código cadastrado no sistema!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    /**
     * pinta a imagem no label
     */
    public void pintarImagem() {
        if (this.imagemB != null) {
            this.jlImagem.setIcon(new ImageIcon(this.imagemB.getScaledInstance(this.jlImagem.getWidth(), this.jlImagem.getHeight(), Image.SCALE_DEFAULT)));
        }
    }

    private void adicionarProdutoPesquisa(int pCodigoProduto) {
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelProdutos = controllerProdutos.getProdutosController(pCodigoProduto);
        float valorArredondado = (float) (modelProdutos.getValor() * quantidadeProduto);
        float valorArredondadoFinal = bLMascaras.arredondamentoComPontoDuasCasas(valorArredondado);

        modelo.addRow(new Object[]{
            tbProdutos.getRowCount() + 1,
            modelProdutos.getCodigo(),
            modelProdutos.getCodigoBarrasEan(),
            modelProdutos.getNome(),
            quantidadeProduto,
            modelProdutos.getValor(),
            valorArredondadoFinal
        });

        quantidadeProduto = 1;
        this.jtfCodigoProduto.setText(null);
    }

    private void limparTabela() {
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        statusCaixa();
        jtfValorPagar.setText("0");
    }

    /**
     * Soma e atualiza os valores total
     *
     * @return
     */
    private float somaEAtualizaValorTotal() {
        float soma = 0;
        float valor = 0;
        int cont = tbProdutos.getRowCount();
        try {
            for (int i = 0; i < cont; i++) {
                valor = Float.parseFloat(String.valueOf(tbProdutos.getValueAt(i, 6)));
                soma = valor + soma;
            }
        } catch (Exception e) {
            soma = 0;
        }
        return soma;
    }

    public int getReturnStatus() {
        return returnStatus;
    }

    public float getValorTotal() {
        return valorTotal;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPdv().setVisible(true);
            }
        });
    }

    /**
     * Imprimir cupom
     */
    private void imprimirCupom(int pCodigo) {
        try {
            //definir impressora
            String nomeImpressora = modelConfig.getImpressoraPDV();
            //gerar dados e imprimir
            String textoImprimir = new GerarCupom().gerarCupomPDV(pCodigo);
            //enviar para impressora
            Impressora.imprimir(nomeImpressora, textoImprimir);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Não foi possível realizar a impressão !!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public String retornarUsuarioLogado() {
        return SessaoUsuario.nome;
    }

    private void configurar() {
        try {
            pNomeUsuario = retornarUsuarioLogado();
            jlOperador.setText(pNomeUsuario);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    private boolean salvarVenda() {
        listaVenda = new ArrayList<>();
        listaProdutoses = new ArrayList<>();
        int codigoProduto;
        float quantidade = 0;

        for (int i = 0; i < tbProdutos.getRowCount(); i++) {
            modelVendas = new Venda();
            modelProdutos = new Produto();
            modelVendas.setClientesCodigo(1);
            modelVendas.setDesconto(new BigDecimal(viewPagamentoPDV.getDesconto()));
            modelVendas.setTaxaEntrega(new BigDecimal(0f));
            modelVendas.setValorTotal(new BigDecimal(viewPagamentoPDV.getValorTotal()));
            try {
                modelVendas.setDataVenda(bLMascaras.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            } catch (Exception ex) {
                Logger.getLogger(ViewVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
            modelVendas.setCodigoUsuario(SessaoUsuario.codigo);
            codigoProduto = Integer.parseInt(tbProdutos.getValueAt(i, 1).toString());
            modelVendas.setProdutosCodigo(codigoProduto);
            modelVendas.setTipo(1);
            modelVendas.setQuantidade(new BigDecimal(tbProdutos.getValueAt(i, 4).toString()));
            modelVendas.setValor(new BigDecimal(tbProdutos.getValueAt(i, 5).toString()));
            modelVendas.setTipoPagamento(1);
            modelVendas.setObservacao("");
            modelProdutos.setCodigo(codigoProduto);
            quantidade = controllerProdutos.getProdutosController(codigoProduto).getEstoque() - Float.parseFloat(tbProdutos.getValueAt(i, 4).toString());
            modelProdutos.setEstoque(quantidade);
            listaVenda.add(modelVendas);
            listaProdutoses.add(modelProdutos);
        }
        modelVendas.setListamVendaes(listaVenda);
        modelProdutos.setListaProdutoes(listaProdutoses);

        //salvar venda
        codigoVenda = controllerVendas.salvarVendasController(modelVendas);
        if (codigoVenda > 0) {
            modelVendas.setCodigo(codigoVenda);
            //da baixa no estoque
            controllerProdutos.atualizarProdutosQuantidadeController(modelProdutos);

            controllerVendas.salvarVendasProdutosController(modelVendas);
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            adicionarValorCaixa();
            if (jlModoImpressao.getText().equals("Sim")) {
                //imprimir cupom
                imprimirCupom(codigoVenda);
            }
            limparTabela();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlDataHora;
    private javax.swing.JLabel jlImagem;
    private javax.swing.JLabel jlModoImpressao;
    private javax.swing.JLabel jlModoInsercao;
    private javax.swing.JLabel jlNomeProduto;
    private javax.swing.JLabel jlNumeroCaixa;
    private javax.swing.JLabel jlNumeroItens;
    private javax.swing.JLabel jlOperador;
    private javax.swing.JLabel jlQuantidadeProduto;
    private javax.swing.JMenu jmArquivo;
    private javax.swing.JMenu jmComandos;
    private javax.swing.JMenuItem jmiAlterarQuantidade;
    private javax.swing.JMenuItem jmiCancelarProduto;
    private javax.swing.JMenuItem jmiEstoque;
    private javax.swing.JMenuItem jmiFinalizarVenda;
    private javax.swing.JMenuItem jmiImprimirCupom;
    private javax.swing.JMenuItem jmiModoImpressao;
    private javax.swing.JMenuItem jmiModoInsercao;
    private javax.swing.JMenuItem jmiPesquisarProduto;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JFormattedTextField jtfCodigoProduto;
    private javax.swing.JLabel jtfStatusCaixa;
    private javax.swing.JLabel jtfValorPagar;
    private javax.swing.JPanel painelBarraInferior;
    private javax.swing.JPanel painelBarraSuperior;
    private javax.swing.JPanel painelCentralTab;
    private javax.swing.JPanel painelGeral;
    private javax.swing.JPanel painelNCaixa;
    private javax.swing.JPanel painelNItens;
    private javax.swing.JPanel painelNomeProduto;
    private javax.swing.JPanel painelValorTotal;
    private javax.swing.JTable tbProdutos;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the valorCusto
     */
    public double getValorCusto() {
        return valorCusto;
    }

    /**
     * @param valorCusto the valorCusto to set
     */
    public void setValorCusto(double valorCusto) {
        this.valorCusto = valorCusto;
    }

    /**
     * @return the numeroCaixa
     */
    public int getNumeroCaixa() {
        return numeroCaixa;
    }

    /**
     * @param numeroCaixa the numeroCaixa to set
     */
    public void setNumeroCaixa(int numeroCaixa) {
        this.numeroCaixa = numeroCaixa;
    }

    /**
     * @param numeroCaixa the numeroCaixa to set
     */
    public void setNumeroCaixaLabel(int numeroCaixa) {
        this.jlNumeroCaixa.setText(this.numeroCaixa + "");
    }

    /**
     * @return the codigoCaixa
     */
    public int getCodigoCaixa() {
        return codigoCaixa;
    }

    /**
     * @param codigoCaixa the codigoCaixa to set
     */
    public void setCodigoCaixa(int codigoCaixa) {
        this.codigoCaixa = codigoCaixa;
    }
}
