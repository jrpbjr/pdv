/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inosystem.pdv.view;

import com.inosystem.pdv.contoller.CidadeController;
import com.inosystem.pdv.contoller.ClienteController;
import com.inosystem.pdv.contoller.EstadoController;
import com.inosystem.pdv.contoller.FormaPagamentoController;
import com.inosystem.pdv.contoller.FornecedorController;
import com.inosystem.pdv.contoller.PermissaoUsuarioController;
import com.inosystem.pdv.contoller.ProdutoController;
import com.inosystem.pdv.contoller.UnidadeMedidaController;
import com.inosystem.pdv.model.Cidade;
import com.inosystem.pdv.model.Cliente;
import com.inosystem.pdv.model.Estado;
import com.inosystem.pdv.model.FormaPagamento;
import com.inosystem.pdv.model.Fornecedor;
import com.inosystem.pdv.model.PermissaoUsuario;
import com.inosystem.pdv.model.Produto;
import com.inosystem.pdv.model.SessaoUsuario;
import com.inosystem.pdv.model.UnidadeMedida;
import com.inosystem.pdv.util.AguardeGerandoRelatorio;
import com.inosystem.pdv.util.Carregando;
import com.inosystem.pdv.util.Mascara;
import commons.report.pkg1.pkg8.pkg2.vreport;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import nfe.view.ViewLeitorNotaXML;
import nfe.view.ViewNFe;
import nfe.view.ViewParAssDigital;


/**
 *
 * @author Vitor Aguiar desenvolvimento de Sistemas
 *
 */
public class ViewPrincipal extends javax.swing.JFrame {

    String pNomeUsuario;
    ClienteController controllerCliente = new ClienteController();
    ProdutoController controllerProdutos = new ProdutoController();
    CidadeController controllerCidade = new CidadeController();
    EstadoController EstadoController = new EstadoController();
    UnidadeMedidaController controllerUnidadeMedia = new UnidadeMedidaController();
    FornecedorController controllerFornecedor = new FornecedorController();
    FormaPagamentoController controllerFormaPagamento = new FormaPagamentoController();
    ArrayList<Fornecedor> modelFornecedors = new ArrayList<>();
    ArrayList<Cliente> modelCliente = new ArrayList<>();
    ArrayList<Produto> modelProdutos = new ArrayList<>();
    ArrayList<Cidade> modelCidade = new ArrayList<>();
    ArrayList<Estado> modelEstado = new ArrayList<>();
    ArrayList<UnidadeMedida> modelUnidadeMedia = new ArrayList<>();
    ArrayList<FormaPagamento> modelFormaPagamentos = new ArrayList<>();
    Mascara bLMascaras = new Mascara();

    /**
     * Creates new form ViewPrincipal
     */
    public ViewPrincipal() {

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        configurar();
        liberarModulos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        uJPanelImagem1 = new componentes.UJPanelImagem();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        btClientes = new javax.swing.JButton();
        btProdutos = new javax.swing.JButton();
        btFornecedores = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btRegistrarVenda = new javax.swing.JButton();
        btPDV = new javax.swing.JButton();
        btOrcamento = new javax.swing.JButton();
        btMesa = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jbPrecoprodutos = new javax.swing.JButton();
        btFluxoCaixa = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jlUsuario = new javax.swing.JLabel();
        jlData = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmArquivo = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JSeparator();
        jmiBackup = new javax.swing.JMenuItem();
        jmiAtivacao = new javax.swing.JMenuItem();
        jmiConfiguracoes = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuSair = new javax.swing.JMenuItem();
        jmCadastrar = new javax.swing.JMenu();
        jmiClientes = new javax.swing.JMenuItem();
        jmiProdutos = new javax.swing.JMenuItem();
        jmiFornecedor = new javax.swing.JMenuItem();
        jmiUsuario = new javax.swing.JMenuItem();
        miCidades = new javax.swing.JMenuItem();
        miEmpresa = new javax.swing.JMenuItem();
        miUnidadeMedida = new javax.swing.JMenuItem();
        miFormaPagamento = new javax.swing.JMenuItem();
        jmiPrecosProdutos = new javax.swing.JMenuItem();
        jmiGarcon = new javax.swing.JMenuItem();
        jmiTransportadora = new javax.swing.JMenuItem();
        jmVendas = new javax.swing.JMenu();
        jmiRegistrarVenda = new javax.swing.JMenuItem();
        jmiConsultarVenda = new javax.swing.JMenuItem();
        miOrcamento = new javax.swing.JMenuItem();
        miPDV = new javax.swing.JMenuItem();
        jmiVendasMesa = new javax.swing.JMenuItem();
        jmiDelivery = new javax.swing.JMenuItem();
        jmFinanceiro = new javax.swing.JMenu();
        jmiContasPagar = new javax.swing.JMenuItem();
        jmiContasReceber = new javax.swing.JMenuItem();
        miFluxoCaixa = new javax.swing.JMenuItem();
        jmiAberturaCaixa = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmiRelClientes = new javax.swing.JMenuItem();
        jmiRelFornecedor = new javax.swing.JMenuItem();
        jmiRelProdutos = new javax.swing.JMenuItem();
        jmiRelatorioVendasPeriodo = new javax.swing.JMenuItem();
        jmiRelatorioVenda = new javax.swing.JMenuItem();
        jmiRelatorioContasPagar = new javax.swing.JMenuItem();
        miRelatorioContasReceber = new javax.swing.JMenuItem();
        jmiCodigoBarras = new javax.swing.JMenuItem();
        jmiRelatorioProdutosVendidos = new javax.swing.JMenuItem();
        jmiDigitarNota = new javax.swing.JMenu();
        jmiCFOP = new javax.swing.JMenuItem();
        jmiLeitorNotaXML = new javax.swing.JMenuItem();
        jmiDigitarNfe = new javax.swing.JMenuItem();
        jmiBanco = new javax.swing.JMenuItem();
        jmiAssinaturaDigital = new javax.swing.JMenuItem();
        jmAjuda = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmiAtualização = new javax.swing.JMenuItem();

        jMenu2.setText("File");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("jMenu4");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BLVendas Pro 4.x");
        setFocusTraversalPolicyProvider(true);
        setIconImage(new ImageIcon(getClass().getResource("/imagens/blicon.png")).getImage());
        setLocationByPlatform(true);

        uJPanelImagem1.setImagem(new java.io.File("C:\\BLVendas\\src\\imagens\\fundo3.jpg"));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Alt+C = Clientes   -   Alt+P = Produtos   -   Alt+F = Fornecedor   -   Alt+V = Vendas  -   Alt+G = Contas Pagar   -    Alt+R = Contas a Receber   -  Orçamento =  ALt+O   -   Alt+D = PDV");
        jPanel2.add(jLabel6);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jToolBar2.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu de acesso rápido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 102))); // NOI18N
        jToolBar2.setForeground(new java.awt.Color(102, 102, 102));
        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar2.setRollover(true);
        jToolBar2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-adicionar-usuário-masculino-filled-50.png"))); // NOI18N
        btClientes.setText("Clientes");
        btClientes.setEnabled(false);
        btClientes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btClientes.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btClientes.setMaximumSize(new java.awt.Dimension(200, 40));
        btClientes.setMinimumSize(new java.awt.Dimension(200, 40));
        btClientes.setPreferredSize(new java.awt.Dimension(200, 40));
        btClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClientesActionPerformed(evt);
            }
        });
        jToolBar2.add(btClientes);

        btProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-comida-como-recursos-filled-50.png"))); // NOI18N
        btProdutos.setText("Produtos");
        btProdutos.setEnabled(false);
        btProdutos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btProdutos.setMaximumSize(new java.awt.Dimension(200, 40));
        btProdutos.setMinimumSize(new java.awt.Dimension(200, 40));
        btProdutos.setPreferredSize(new java.awt.Dimension(200, 40));
        btProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProdutosActionPerformed(evt);
            }
        });
        jToolBar2.add(btProdutos);

        btFornecedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-empregado-filled-50.png"))); // NOI18N
        btFornecedores.setText("Fornecedor");
        btFornecedores.setEnabled(false);
        btFornecedores.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btFornecedores.setMaximumSize(new java.awt.Dimension(200, 40));
        btFornecedores.setMinimumSize(new java.awt.Dimension(200, 40));
        btFornecedores.setPreferredSize(new java.awt.Dimension(200, 40));
        btFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFornecedoresActionPerformed(evt);
            }
        });
        jToolBar2.add(btFornecedores);
        jToolBar2.add(jSeparator3);

        btRegistrarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        btRegistrarVenda.setText("Vender");
        btRegistrarVenda.setEnabled(false);
        btRegistrarVenda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btRegistrarVenda.setMaximumSize(new java.awt.Dimension(200, 40));
        btRegistrarVenda.setMinimumSize(new java.awt.Dimension(200, 40));
        btRegistrarVenda.setPreferredSize(new java.awt.Dimension(200, 40));
        btRegistrarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrarVendaActionPerformed(evt);
            }
        });
        jToolBar2.add(btRegistrarVenda);

        btPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        btPDV.setText("PDV");
        btPDV.setEnabled(false);
        btPDV.setFocusable(false);
        btPDV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btPDV.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btPDV.setMaximumSize(new java.awt.Dimension(200, 40));
        btPDV.setMinimumSize(new java.awt.Dimension(200, 40));
        btPDV.setPreferredSize(new java.awt.Dimension(200, 40));
        btPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPDVActionPerformed(evt);
            }
        });
        jToolBar2.add(btPDV);

        btOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-contabilidade-de-fundo-filled-50.png"))); // NOI18N
        btOrcamento.setText("Orçamento");
        btOrcamento.setEnabled(false);
        btOrcamento.setFocusable(false);
        btOrcamento.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btOrcamento.setMaximumSize(new java.awt.Dimension(200, 40));
        btOrcamento.setMinimumSize(new java.awt.Dimension(200, 40));
        btOrcamento.setPreferredSize(new java.awt.Dimension(200, 40));
        btOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOrcamentoActionPerformed(evt);
            }
        });
        jToolBar2.add(btOrcamento);

        btMesa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        btMesa.setText("Mesa  ");
        btMesa.setEnabled(false);
        btMesa.setFocusable(false);
        btMesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btMesa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btMesa.setMaximumSize(new java.awt.Dimension(200, 40));
        btMesa.setMinimumSize(new java.awt.Dimension(200, 40));
        btMesa.setPreferredSize(new java.awt.Dimension(200, 40));
        btMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMesaActionPerformed(evt);
            }
        });
        jToolBar2.add(btMesa);
        jToolBar2.add(jSeparator4);

        jbPrecoprodutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-caro-2-filled-50.png"))); // NOI18N
        jbPrecoprodutos.setText("Preço produtos");
        jbPrecoprodutos.setEnabled(false);
        jbPrecoprodutos.setFocusable(false);
        jbPrecoprodutos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jbPrecoprodutos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jbPrecoprodutos.setMaximumSize(new java.awt.Dimension(200, 40));
        jbPrecoprodutos.setMinimumSize(new java.awt.Dimension(200, 40));
        jbPrecoprodutos.setPreferredSize(new java.awt.Dimension(200, 40));
        jbPrecoprodutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPrecoprodutosActionPerformed(evt);
            }
        });
        jToolBar2.add(jbPrecoprodutos);

        btFluxoCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 30/icons8-dados-em-ambas-as-direções-filled-50.png"))); // NOI18N
        btFluxoCaixa.setText("Fluxo de caixa");
        btFluxoCaixa.setEnabled(false);
        btFluxoCaixa.setFocusable(false);
        btFluxoCaixa.setHideActionText(true);
        btFluxoCaixa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btFluxoCaixa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btFluxoCaixa.setMaximumSize(new java.awt.Dimension(200, 40));
        btFluxoCaixa.setMinimumSize(new java.awt.Dimension(200, 40));
        btFluxoCaixa.setPreferredSize(new java.awt.Dimension(200, 40));
        btFluxoCaixa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btFluxoCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFluxoCaixaActionPerformed(evt);
            }
        });
        jToolBar2.add(btFluxoCaixa);
        jToolBar2.add(jSeparator5);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nfe/imagens/nfe mini.png"))); // NOI18N
        jLabel8.setText("em desenvolvimento ...");
        jLabel8.setToolTipText("");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jToolBar2.add(jLabel8);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout uJPanelImagem1Layout = new javax.swing.GroupLayout(uJPanelImagem1);
        uJPanelImagem1.setLayout(uJPanelImagem1Layout);
        uJPanelImagem1Layout.setHorizontalGroup(
            uJPanelImagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(uJPanelImagem1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(699, Short.MAX_VALUE))
        );
        uJPanelImagem1Layout.setVerticalGroup(
            uJPanelImagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Logado como:");

        jlUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jlUsuario.setText("usuaario");

        jlData.setForeground(new java.awt.Color(255, 255, 255));
        jlData.setText("data");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data/Hora de login:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlData))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jlUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jlData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jmArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-lista-50.png"))); // NOI18N
        jmArquivo.setText("Arquivo");
        jmArquivo.add(jSeparator1);

        jmiBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-fundo-de-encaixe-filled-50.png"))); // NOI18N
        jmiBackup.setText("Backup");
        jmiBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBackupActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiBackup);

        jmiAtivacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-desbloquear-filled-50.png"))); // NOI18N
        jmiAtivacao.setText("Ativação por serial");
        jmiAtivacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtivacaoActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiAtivacao);

        jmiConfiguracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-manutenção-filled-50.png"))); // NOI18N
        jmiConfiguracoes.setText("Configurações");
        jmiConfiguracoes.setEnabled(false);
        jmiConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConfiguracoesActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiConfiguracoes);
        jmArquivo.add(jSeparator2);

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-sair-filled-50.png"))); // NOI18N
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        jmArquivo.add(mnuSair);

        jMenuBar1.add(jmArquivo);

        jmCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-usuário-masculino-filled-50.png"))); // NOI18N
        jmCadastrar.setText("Cadastros");

        jmiClientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jmiClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        jmiClientes.setText("Clientes");
        jmiClientes.setEnabled(false);
        jmiClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiClientesActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiClientes);

        jmiProdutos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jmiProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-comida-como-recursos-filled-50.png"))); // NOI18N
        jmiProdutos.setText("Produtos");
        jmiProdutos.setEnabled(false);
        jmiProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProdutosActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiProdutos);

        jmiFornecedor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        jmiFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-empregado-filled-50.png"))); // NOI18N
        jmiFornecedor.setText("Fornecedores");
        jmiFornecedor.setEnabled(false);
        jmiFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFornecedorActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiFornecedor);

        jmiUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        jmiUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-direitos-de-usuário-filled-50.png"))); // NOI18N
        jmiUsuario.setText("Usuário");
        jmiUsuario.setEnabled(false);
        jmiUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUsuarioActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiUsuario);

        miCidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        miCidades.setText("Cidades");
        miCidades.setEnabled(false);
        miCidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCidadesActionPerformed(evt);
            }
        });
        jmCadastrar.add(miCidades);

        miEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        miEmpresa.setText("Empresa");
        miEmpresa.setEnabled(false);
        miEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEmpresaActionPerformed(evt);
            }
        });
        jmCadastrar.add(miEmpresa);

        miUnidadeMedida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        miUnidadeMedida.setText("Unidade de medida");
        miUnidadeMedida.setEnabled(false);
        miUnidadeMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miUnidadeMedidaActionPerformed(evt);
            }
        });
        jmCadastrar.add(miUnidadeMedida);

        miFormaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        miFormaPagamento.setText("Forma de pagamento");
        miFormaPagamento.setEnabled(false);
        miFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFormaPagamentoActionPerformed(evt);
            }
        });
        jmCadastrar.add(miFormaPagamento);

        jmiPrecosProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        jmiPrecosProdutos.setText("Preço e estoque de produtos");
        jmiPrecosProdutos.setEnabled(false);
        jmiPrecosProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPrecosProdutosActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiPrecosProdutos);

        jmiGarcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-usuário-masculino-filled-50.png"))); // NOI18N
        jmiGarcon.setText("Garçon");
        jmiGarcon.setEnabled(false);
        jmiGarcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGarconActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiGarcon);

        jmiTransportadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        jmiTransportadora.setText("Transportadora");
        jmiTransportadora.setEnabled(false);
        jmiTransportadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTransportadoraActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiTransportadora);

        jMenuBar1.add(jmCadastrar);

        jmVendas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        jmVendas.setText("Vendas");

        jmiRegistrarVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        jmiRegistrarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        jmiRegistrarVenda.setText("Vendas");
        jmiRegistrarVenda.setEnabled(false);
        jmiRegistrarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRegistrarVendaActionPerformed(evt);
            }
        });
        jmVendas.add(jmiRegistrarVenda);

        jmiConsultarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-binóculos-filled-50.png"))); // NOI18N
        jmiConsultarVenda.setText("Consultar vendas");
        jmiConsultarVenda.setEnabled(false);
        jmiConsultarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultarVendaActionPerformed(evt);
            }
        });
        jmVendas.add(jmiConsultarVenda);

        miOrcamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        miOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-contabilidade-de-fundo-filled-50.png"))); // NOI18N
        miOrcamento.setText("Orcamento");
        miOrcamento.setEnabled(false);
        miOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOrcamentoActionPerformed(evt);
            }
        });
        jmVendas.add(miOrcamento);

        miPDV.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        miPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        miPDV.setText("Vendas em PDV");
        miPDV.setEnabled(false);
        miPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPDVActionPerformed(evt);
            }
        });
        jmVendas.add(miPDV);

        jmiVendasMesa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        jmiVendasMesa.setText("Vendas por mesas");
        jmiVendasMesa.setEnabled(false);
        jmiVendasMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiVendasMesaActionPerformed(evt);
            }
        });
        jmVendas.add(jmiVendasMesa);

        jmiDelivery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-carrinho-de-compras-filled-50.png"))); // NOI18N
        jmiDelivery.setText("Delivery");
        jmiDelivery.setEnabled(false);
        jmiDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDeliveryActionPerformed(evt);
            }
        });
        jmVendas.add(jmiDelivery);

        jMenuBar1.add(jmVendas);

        jmFinanceiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-caro-2-filled-50.png"))); // NOI18N
        jmFinanceiro.setText("Financeiro");

        jmiContasPagar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        jmiContasPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-presentes-para-todos-filled-50.png"))); // NOI18N
        jmiContasPagar.setText("Conta a pagar");
        jmiContasPagar.setEnabled(false);
        jmiContasPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiContasPagarActionPerformed(evt);
            }
        });
        jmFinanceiro.add(jmiContasPagar);

        jmiContasReceber.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jmiContasReceber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-baixar-filled-50(1).png"))); // NOI18N
        jmiContasReceber.setText("Contas a receber");
        jmiContasReceber.setEnabled(false);
        jmiContasReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiContasReceberActionPerformed(evt);
            }
        });
        jmFinanceiro.add(jmiContasReceber);

        miFluxoCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-dados-em-ambas-as-direções-filled-50.png"))); // NOI18N
        miFluxoCaixa.setText("Fluxo de caixa");
        miFluxoCaixa.setEnabled(false);
        miFluxoCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFluxoCaixaActionPerformed(evt);
            }
        });
        jmFinanceiro.add(miFluxoCaixa);

        jmiAberturaCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-caro-2-filled-50.png"))); // NOI18N
        jmiAberturaCaixa.setText("Abertura de caixa");
        jmiAberturaCaixa.setEnabled(false);
        jmiAberturaCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAberturaCaixaActionPerformed(evt);
            }
        });
        jmFinanceiro.add(jmiAberturaCaixa);

        jMenuBar1.add(jmFinanceiro);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-impressão-filled-50.png"))); // NOI18N
        jMenu1.setText("Relatórios");

        jmiRelClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelClientes.setText("Clientes");
        jmiRelClientes.setEnabled(false);
        jmiRelClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelClientesActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelClientes);

        jmiRelFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelFornecedor.setText("Fornecedores");
        jmiRelFornecedor.setEnabled(false);
        jmiRelFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelFornecedorActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelFornecedor);

        jmiRelProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelProdutos.setText("Produtos");
        jmiRelProdutos.setEnabled(false);
        jmiRelProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelProdutosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelProdutos);

        jmiRelatorioVendasPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelatorioVendasPeriodo.setText("Vendas por peíodo");
        jmiRelatorioVendasPeriodo.setEnabled(false);
        jmiRelatorioVendasPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelatorioVendasPeriodoActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelatorioVendasPeriodo);

        jmiRelatorioVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelatorioVenda.setText("Venda unitária");
        jmiRelatorioVenda.setEnabled(false);
        jmiRelatorioVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelatorioVendaActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelatorioVenda);

        jmiRelatorioContasPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelatorioContasPagar.setText("Contas a pagar");
        jmiRelatorioContasPagar.setEnabled(false);
        jmiRelatorioContasPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelatorioContasPagarActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelatorioContasPagar);

        miRelatorioContasReceber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        miRelatorioContasReceber.setText("Contas a receber");
        miRelatorioContasReceber.setEnabled(false);
        miRelatorioContasReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRelatorioContasReceberActionPerformed(evt);
            }
        });
        jMenu1.add(miRelatorioContasReceber);

        jmiCodigoBarras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiCodigoBarras.setText("Código de barras");
        jmiCodigoBarras.setEnabled(false);
        jmiCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCodigoBarrasActionPerformed(evt);
            }
        });
        jMenu1.add(jmiCodigoBarras);

        jmiRelatorioProdutosVendidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jmiRelatorioProdutosVendidos.setText("Produtos vendidos");
        jmiRelatorioProdutosVendidos.setEnabled(false);
        jmiRelatorioProdutosVendidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelatorioProdutosVendidosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiRelatorioProdutosVendidos);

        jMenuBar1.add(jMenu1);

        jmiDigitarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/btn_nfe 20.png"))); // NOI18N
        jmiDigitarNota.setText("NFe");

        jmiCFOP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-contabilidade-de-fundo-filled-50.png"))); // NOI18N
        jmiCFOP.setText("CFOP");
        jmiCFOP.setEnabled(false);
        jmiCFOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCFOPActionPerformed(evt);
            }
        });
        jmiDigitarNota.add(jmiCFOP);

        jmiLeitorNotaXML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-arquivo-filled-50.png"))); // NOI18N
        jmiLeitorNotaXML.setText("Leitor de nota XML");
        jmiLeitorNotaXML.setEnabled(false);
        jmiLeitorNotaXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLeitorNotaXMLActionPerformed(evt);
            }
        });
        jmiDigitarNota.add(jmiLeitorNotaXML);

        jmiDigitarNfe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        jmiDigitarNfe.setText("Emissão de NFe");
        jmiDigitarNfe.setEnabled(false);
        jmiDigitarNfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDigitarNfeActionPerformed(evt);
            }
        });
        jmiDigitarNota.add(jmiDigitarNfe);

        jmiBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-caro-2-filled-50.png"))); // NOI18N
        jmiBanco.setText("Banco");
        jmiBanco.setEnabled(false);
        jmiBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBancoActionPerformed(evt);
            }
        });
        jmiDigitarNota.add(jmiBanco);

        jmiAssinaturaDigital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-editar-filled-50.png"))); // NOI18N
        jmiAssinaturaDigital.setText("Assinatura Digital");
        jmiAssinaturaDigital.setEnabled(false);
        jmiAssinaturaDigital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAssinaturaDigitalActionPerformed(evt);
            }
        });
        jmiDigitarNota.add(jmiAssinaturaDigital);

        jMenuBar1.add(jmiDigitarNota);

        jmAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-ajuda-filled-50.png"))); // NOI18N
        jmAjuda.setText("Ajuda");
        jmAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAjudaActionPerformed(evt);
            }
        });

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-e-mail-filled-50.png"))); // NOI18N
        jMenuItem3.setText("Contato");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jmAjuda.add(jMenuItem3);

        jmiAtualização.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-atualizações-disponíveis-filled-50.png"))); // NOI18N
        jmiAtualização.setText("Ultima atualização");
        jmiAtualização.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtualizaçãoActionPerformed(evt);
            }
        });
        jmAjuda.add(jmiAtualização);

        jMenuBar1.add(jmAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(uJPanelImagem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(uJPanelImagem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuSairActionPerformed

    private void jmiClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiClientesActionPerformed
        modelCidade = controllerCidade.getListaCidadeController();
        if (modelCidade.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro uma cidade!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewCliente().setVisible(true);
        }
    }//GEN-LAST:event_jmiClientesActionPerformed

    private void jmiProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProdutosActionPerformed
        modelUnidadeMedia = controllerUnidadeMedia.getListaUnidadeMediaController();
        modelFornecedors = controllerFornecedor.getListaFornecedorController();
        if (modelUnidadeMedia.size() < 1 || modelFornecedors.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro unidade de medida e fornecedor!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewProduto().setVisible(true);
        }
    }//GEN-LAST:event_jmiProdutosActionPerformed

    private void jmiFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFornecedorActionPerformed
        modelCidade = controllerCidade.getListaCidadeController();
        if (modelCidade.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro uma cidade!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewFornecedor().setVisible(true);
        }
    }//GEN-LAST:event_jmiFornecedorActionPerformed

    private void jmiRegistrarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRegistrarVendaActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewVenda().setVisible(true);
        }
    }//GEN-LAST:event_jmiRegistrarVendaActionPerformed

    private void jmiConsultarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultarVendaActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            ViewVenda venda = new ViewVenda();
            venda.setViewConsultarVendas();
            venda.setVisible(true);
        }
    }//GEN-LAST:event_jmiConsultarVendaActionPerformed

    private void jmiRelClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelClientesActionPerformed
        final AguardeGerandoRelatorio carregando = new AguardeGerandoRelatorio();
        final ClienteController controllerCliente = new ClienteController();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // imprimir clientes
                controllerCliente.gerarRelatorioCliente();
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jmiRelClientesActionPerformed

    private void jmiRelFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelFornecedorActionPerformed
        final AguardeGerandoRelatorio carregando = new AguardeGerandoRelatorio();
        final FornecedorController controllerFornecedor = new FornecedorController();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // imrimir fornecedores
                controllerFornecedor.gerarRelatorioFornecedor();
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jmiRelFornecedorActionPerformed

    private void jmiRelProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelProdutosActionPerformed
        final AguardeGerandoRelatorio carregando = new AguardeGerandoRelatorio();
        final ProdutoController controllerProdutos = new ProdutoController();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // imprimir produtos
                controllerProdutos.gerarRelatorioProdutos();
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jmiRelProdutosActionPerformed

    private void jmiUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUsuarioActionPerformed
        // TODO add your handling code here:
        new ViewUsuario().setVisible(true);
    }//GEN-LAST:event_jmiUsuarioActionPerformed

    private void jmiRelatorioVendasPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelatorioVendasPeriodoActionPerformed
        // TODO add your handling code here:
        new ViewRelatorioVendas().setVisible(true);
    }//GEN-LAST:event_jmiRelatorioVendasPeriodoActionPerformed

    private void jmiRelatorioVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelatorioVendaActionPerformed
        // TODO add your handling code here:
        new ViewImprimirPDV(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jmiRelatorioVendaActionPerformed

    private void jmiContasPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiContasPagarActionPerformed
        modelFormaPagamentos = controllerFormaPagamento.getListaFormaPagamentoController();
        modelFornecedors = controllerFornecedor.getListaFornecedorController();
        if (modelFormaPagamentos.size() < 1 || modelFornecedors.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro forma de pagamento e fornecedor!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewContasPagar().setVisible(true);
        }
    }//GEN-LAST:event_jmiContasPagarActionPerformed

    private void jmiContasReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiContasReceberActionPerformed
        modelFormaPagamentos = controllerFormaPagamento.getListaFormaPagamentoController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelFormaPagamentos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro forma de pagamento e clientes!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewContasReceber().setVisible(true);
        }
    }//GEN-LAST:event_jmiContasReceberActionPerformed

    private void jmiRelatorioContasPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelatorioContasPagarActionPerformed
        // TODO add your handling code here:
        new ViewRelatoriosContasPagar().setVisible(true);
    }//GEN-LAST:event_jmiRelatorioContasPagarActionPerformed

    private void miCidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCidadesActionPerformed
        // TODO add your handling code here:
        new ViewCidade().setVisible(true);
    }//GEN-LAST:event_miCidadesActionPerformed

    private void miEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEmpresaActionPerformed
        modelCidade = controllerCidade.getListaCidadeController();
        if (modelCidade.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro uma cidade!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewEmpresa().setVisible(true);
        }
    }//GEN-LAST:event_miEmpresaActionPerformed

    private void miUnidadeMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miUnidadeMedidaActionPerformed
        // TODO add your handling code here:
        new ViewUnidadeMedia().setVisible(true);
    }//GEN-LAST:event_miUnidadeMedidaActionPerformed

    private void miFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFormaPagamentoActionPerformed
        // TODO add your handling code here:
        new ViewFormaPagamento().setVisible(true);
    }//GEN-LAST:event_miFormaPagamentoActionPerformed

    private void miRelatorioContasReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRelatorioContasReceberActionPerformed
        // TODO add your handling code here:
        new ViewRelatoriosContasReceber().setVisible(true);
    }//GEN-LAST:event_miRelatorioContasReceberActionPerformed

    private void miOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOrcamentoActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewOrcamento().setVisible(true);
        }
    }//GEN-LAST:event_miOrcamentoActionPerformed

    private void miPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPDVActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewABCaixa().setVisible(true);
        }
    }//GEN-LAST:event_miPDVActionPerformed

    private void miFluxoCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFluxoCaixaActionPerformed
        // TODO add your handling code here:
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                new ViewFluxoCaixa().setVisible(true);
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_miFluxoCaixaActionPerformed

    private void jmiCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCodigoBarrasActionPerformed
        // TODO add your handling code here:
        new ViewCodigobarras().setVisible(true);
    }//GEN-LAST:event_jmiCodigoBarrasActionPerformed

    private void jmiPrecosProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPrecosProdutosActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelFornecedors = controllerFornecedor.getListaFornecedorController();
        if (modelProdutos.size() < 1 || modelFornecedors.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro fornecedores e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewPrecosProdutos().setVisible(true);
        }
    }//GEN-LAST:event_jmiPrecosProdutosActionPerformed

    private void jmiRelatorioProdutosVendidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelatorioProdutosVendidosActionPerformed
        // TODO add your handling code here:
        new ViewRelatorioProduto().setVisible(true);
    }//GEN-LAST:event_jmiRelatorioProdutosVendidosActionPerformed

    private void jmiCFOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCFOPActionPerformed
        // TODO add your handling code here:
        new ViewCFOP().setVisible(true);
    }//GEN-LAST:event_jmiCFOPActionPerformed

    private void jmiBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBackupActionPerformed
        //verificar se esta no servidor para abrir
        if (SessaoUsuario.ipServidor.equals("localhost")) {
            try {
                new ViewBackup().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(ViewPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Os backups e Restores devem ser feitos no servidor!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jmiBackupActionPerformed

    private void jmiGarconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGarconActionPerformed
        // TODO add your handling code here:
        new ViewGarcom().setVisible(true);
    }//GEN-LAST:event_jmiGarconActionPerformed

    private void jmiVendasMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiVendasMesaActionPerformed
        modelProdutos = controllerProdutos.getListaProdutosAtivosController();
        modelCliente = controllerCliente.getListaClienteAtivoController();
        if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
            JOptionPane.showMessageDialog(this, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            new ViewMesas().setVisible(true);
        }
    }//GEN-LAST:event_jmiVendasMesaActionPerformed

    private void btClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClientesActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelCidade = controllerCidade.getListaCidadeController();
                if (modelCidade.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro uma cidade!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewCliente().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btClientesActionPerformed

    private void btProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProdutosActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelUnidadeMedia = controllerUnidadeMedia.getListaUnidadeMediaController();
                modelFornecedors = controllerFornecedor.getListaFornecedorController();
                if (modelUnidadeMedia.size() < 1 || modelFornecedors.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro unidade de medida e fornecedor!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewProduto().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btProdutosActionPerformed

    private void btFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFornecedoresActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelCidade = controllerCidade.getListaCidadeController();
                if (modelCidade.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro uma cidade!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewFornecedor().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btFornecedoresActionPerformed

    private void btRegistrarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrarVendaActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelCliente = controllerCliente.getListaClienteAtivoController();
                if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewVenda().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btRegistrarVendaActionPerformed

    private void btOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOrcamentoActionPerformed
        // TODO add your handling code here:
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelCliente = controllerCliente.getListaClienteAtivoController();
                if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewOrcamento().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btOrcamentoActionPerformed

    private void btPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPDVActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelCliente = controllerCliente.getListaClienteAtivoController();
                if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewABCaixa().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btPDVActionPerformed

    private void btMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMesaActionPerformed
        // acessar
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelCliente = controllerCliente.getListaClienteAtivoController();
                if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewMesas().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btMesaActionPerformed

    private void btFluxoCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFluxoCaixaActionPerformed
        // TODO add your handling code here:
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                new ViewFluxoCaixa().setVisible(true);
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_btFluxoCaixaActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        Desktop desk = java.awt.Desktop.getDesktop();
        try {
            desk.browse(new java.net.URI("http://* jrpbjr/"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jbPrecoprodutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPrecoprodutosActionPerformed
        // acessar
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelFornecedors = controllerFornecedor.getListaFornecedorController();
                if (modelProdutos.size() < 1 || modelFornecedors.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro fornecedores e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewPrecosProdutos().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jbPrecoprodutosActionPerformed

    private void jmiAberturaCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAberturaCaixaActionPerformed
        // TODO add your handling code here:
        new ViewABCaixa().setVisible(true);
    }//GEN-LAST:event_jmiAberturaCaixaActionPerformed

    private void jmiDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDeliveryActionPerformed
        final Carregando carregando = new Carregando();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // abrir
                modelProdutos = controllerProdutos.getListaProdutosAtivosController();
                modelCliente = controllerCliente.getListaClienteAtivoController();
                if (modelProdutos.size() < 1 || modelCliente.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Cadastre primeiro clientes e produtos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
                } else {
                    new ViewDelivery().setVisible(true);
                }
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jmiDeliveryActionPerformed

    private void jmAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAjudaActionPerformed
        // TODO add your handling code here:
        new ViewSobre(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jmAjudaActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new ViewSobre(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jmiLeitorNotaXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLeitorNotaXMLActionPerformed
        // TODO add your handling code here:
        new ViewLeitorNotaXML().setVisible(true);
    }//GEN-LAST:event_jmiLeitorNotaXMLActionPerformed

    private void jmiDigitarNfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDigitarNfeActionPerformed
        // TODO add your handling code here:
        new ViewNFe().setVisible(true);
    }//GEN-LAST:event_jmiDigitarNfeActionPerformed

    private void jmiTransportadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTransportadoraActionPerformed
        // TODO add your handling code here:
        new ViewTransportadora().setVisible(true);
    }//GEN-LAST:event_jmiTransportadoraActionPerformed

    private void jmiAtualizaçãoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtualizaçãoActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Mensagens de alerta de pedidos prontos no app de 30 em 30s\n"
                + "Correção do valor de desconto no cupom\n"
                + "Opção de selecionar o garçon na interface de mesa\n"
                + "Atualização automática em tabela de pedidos da mesa\n"
                + "Alteração na tabela itens_pedido_mesa do banco de dados.");
    }//GEN-LAST:event_jmiAtualizaçãoActionPerformed

    private void jmiAtivacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtivacaoActionPerformed
        // TODO add your handling code here:
        new ViewAtivacao().setVisible(true);
    }//GEN-LAST:event_jmiAtivacaoActionPerformed

    private void jmiBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBancoActionPerformed
        // TODO add your handling code here:
        new ViewBanco().setVisible(true);
    }//GEN-LAST:event_jmiBancoActionPerformed

    private void jmiAssinaturaDigitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAssinaturaDigitalActionPerformed
        // TODO add your handling code here:
        new ViewParAssDigital().setVisible(true);
    }//GEN-LAST:event_jmiAssinaturaDigitalActionPerformed

    private void jmiConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConfiguracoesActionPerformed
        // TODO add your handling code here:
        new ViewConfiguracao().setVisible(true);
    }//GEN-LAST:event_jmiConfiguracoesActionPerformed

    public String retornarUsuarioLogado() {
        return new SessaoUsuario().nome;
    }

    private void cria() {
        JButton bt = new JButton("Código fonte");
        bt.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new vreport().setVisible(true);
            }
        });
//        jMenuBar1.add(bt);
    }

    private void configurar() {
        pNomeUsuario = retornarUsuarioLogado();
        jlUsuario.setText(pNomeUsuario);
        jlData.setText(bLMascaras.retornarDataHora());
    }

    private void liberarModulos() {
        PermissaoUsuarioController controllerPermissaousuario = new PermissaoUsuarioController();
        ArrayList<PermissaoUsuario> listaPermissaoUsuarios = new ArrayList<>();
        listaPermissaoUsuarios = controllerPermissaousuario.getListaPermissaousuarioController(new SessaoUsuario().codigo);
        cria();
        for (int i = 0; i < listaPermissaoUsuarios.size(); i++) {
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("cliente")) {
                btClientes.setEnabled(true);
                jmiRelClientes.setEnabled(true);
                jmiClientes.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("produto")) {
                btProdutos.setEnabled(true);
                jmiRelProdutos.setEnabled(true);
                jmiProdutos.setEnabled(true);
                jmiCodigoBarras.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("compras")) {
                jmiPrecosProdutos.setEnabled(true);
                jbPrecoprodutos.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("fornecedor")) {
                btFornecedores.setEnabled(true);
                jmiFornecedor.setEnabled(true);
                jmiTransportadora.setEnabled(true);
                jmiRelFornecedor.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("usuario")) {
                jmiUsuario.setEnabled(true);
                jmiGarcon.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("venda")) {
                btRegistrarVenda.setEnabled(true);
                btMesa.setEnabled(true);
                jmiRegistrarVenda.setEnabled(true);
                jmiVendasMesa.setEnabled(true);
                btMesa.setEnabled(true);
                jmiConsultarVenda.setEnabled(true);
                jmiRelatorioVenda.setEnabled(true);
                jmiRelatorioVendasPeriodo.setEnabled(true);
                btPDV.setEnabled(true);
                miPDV.setEnabled(true);
                jmiRelatorioProdutosVendidos.setEnabled(true);
                jmiAberturaCaixa.setEnabled(true);
                jmiDelivery.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("pagar")) {
                jmiContasPagar.setEnabled(true);
                jmiRelatorioContasPagar.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("receber")) {
                jmiContasReceber.setEnabled(true);
                miRelatorioContasReceber.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("caixa")) {
                jmiRelatorioContasPagar.setEnabled(true);
                btFluxoCaixa.setEnabled(true);
                miFluxoCaixa.setEnabled(true);
                jmiBanco.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("empresa")) {
                miEmpresa.setEnabled(true);
                jmiConfiguracoes.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("fornecedor")) {
                jmiFornecedor.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("cidade")) {
                miCidades.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("unidade")) {
                miUnidadeMedida.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("pagamento")) {
                miFormaPagamento.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("orcamento")) {
                miOrcamento.setEnabled(true);
                btOrcamento.setEnabled(true);
            }
            if (listaPermissaoUsuarios.get(i).getPermissao().equals("nfe")) {
                jmiCFOP.setEnabled(true);
                jmiLeitorNotaXML.setEnabled(true);
                jmiDigitarNfe.setEnabled(true);
                jmiAssinaturaDigital.setEnabled(true);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClientes;
    private javax.swing.JButton btFluxoCaixa;
    private javax.swing.JButton btFornecedores;
    private javax.swing.JButton btMesa;
    private javax.swing.JButton btOrcamento;
    private javax.swing.JButton btPDV;
    private javax.swing.JButton btProdutos;
    private javax.swing.JButton btRegistrarVenda;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton jbPrecoprodutos;
    private javax.swing.JLabel jlData;
    private javax.swing.JLabel jlUsuario;
    private javax.swing.JMenu jmAjuda;
    private javax.swing.JMenu jmArquivo;
    private javax.swing.JMenu jmCadastrar;
    private javax.swing.JMenu jmFinanceiro;
    private javax.swing.JMenu jmVendas;
    private javax.swing.JMenuItem jmiAberturaCaixa;
    private javax.swing.JMenuItem jmiAssinaturaDigital;
    private javax.swing.JMenuItem jmiAtivacao;
    private javax.swing.JMenuItem jmiAtualização;
    private javax.swing.JMenuItem jmiBackup;
    private javax.swing.JMenuItem jmiBanco;
    private javax.swing.JMenuItem jmiCFOP;
    private javax.swing.JMenuItem jmiClientes;
    private javax.swing.JMenuItem jmiCodigoBarras;
    private javax.swing.JMenuItem jmiConfiguracoes;
    private javax.swing.JMenuItem jmiConsultarVenda;
    private javax.swing.JMenuItem jmiContasPagar;
    private javax.swing.JMenuItem jmiContasReceber;
    private javax.swing.JMenuItem jmiDelivery;
    private javax.swing.JMenuItem jmiDigitarNfe;
    private javax.swing.JMenu jmiDigitarNota;
    private javax.swing.JMenuItem jmiFornecedor;
    private javax.swing.JMenuItem jmiGarcon;
    private javax.swing.JMenuItem jmiLeitorNotaXML;
    private javax.swing.JMenuItem jmiPrecosProdutos;
    private javax.swing.JMenuItem jmiProdutos;
    private javax.swing.JMenuItem jmiRegistrarVenda;
    private javax.swing.JMenuItem jmiRelClientes;
    private javax.swing.JMenuItem jmiRelFornecedor;
    private javax.swing.JMenuItem jmiRelProdutos;
    private javax.swing.JMenuItem jmiRelatorioContasPagar;
    private javax.swing.JMenuItem jmiRelatorioProdutosVendidos;
    private javax.swing.JMenuItem jmiRelatorioVenda;
    private javax.swing.JMenuItem jmiRelatorioVendasPeriodo;
    private javax.swing.JMenuItem jmiTransportadora;
    private javax.swing.JMenuItem jmiUsuario;
    private javax.swing.JMenuItem jmiVendasMesa;
    private javax.swing.JMenuItem miCidades;
    private javax.swing.JMenuItem miEmpresa;
    private javax.swing.JMenuItem miFluxoCaixa;
    private javax.swing.JMenuItem miFormaPagamento;
    private javax.swing.JMenuItem miOrcamento;
    private javax.swing.JMenuItem miPDV;
    private javax.swing.JMenuItem miRelatorioContasReceber;
    private javax.swing.JMenuItem miUnidadeMedida;
    private javax.swing.JMenuItem mnuSair;
    private componentes.UJPanelImagem uJPanelImagem1;
    // End of variables declaration//GEN-END:variables

    private void JButton() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
