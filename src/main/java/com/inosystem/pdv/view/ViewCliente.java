package com.inosystem.pdv.view;

import com.inosystem.pdv.contoller.CidadeController;
import com.inosystem.pdv.contoller.ClienteCidadeEstadoController;
import com.inosystem.pdv.contoller.ClienteController;
import com.inosystem.pdv.contoller.EstadoController;
import com.inosystem.pdv.model.Cidade;
import com.inosystem.pdv.model.Cliente;
import com.inosystem.pdv.model.ClienteCidadeEstado;
import com.inosystem.pdv.model.Estado;
import com.inosystem.pdv.util.AguardeGerandoRelatorio;
import com.inosystem.pdv.util.Mascara;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author Jrpbjr * jrpbjr *
 */
public class ViewCliente extends javax.swing.JFrame {

    Cliente modelCliente = new Cliente();
    ClienteController controllerCliente = new ClienteController();
    EstadoController EstadoController = new EstadoController();
    CidadeController controllerCidade = new CidadeController();
    ClienteCidadeEstadoController controllerClienteCidadeEstado = new ClienteCidadeEstadoController();
    ArrayList<Cidade> listaCidades = new ArrayList<>();
    ArrayList<Estado> listaEstados = new ArrayList<>();
    ArrayList<Cliente> listaCliente = new ArrayList<>();
    ArrayList<ClienteCidadeEstado> listaClienteCidadeEstados = new ArrayList<>();
    Mascara bLMascaras = new Mascara();
    String tipoCadastro;

    /**
     * Creates new form Clientes
     */
    public ViewCliente() {
        initComponents();
        setLocationRelativeTo(null);
        this.carregarClientes();
        limparCampos();
        validarTipoPessoa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfPesquisaCliente = new javax.swing.JTextField();
        btPesquisaCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        tfBairro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();
        tfCodigo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox();
        cbCidade = new javax.swing.JComboBox();
        btNovaCidade = new javax.swing.JButton();
        jlcpf = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfObservacao = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jcbAtivo = new javax.swing.JComboBox<>();
        jcbTipoPessoa = new javax.swing.JComboBox<>();
        jlNomeFantasia = new javax.swing.JLabel();
        jtfNomeFantasia = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfTelefone = new javax.swing.JTextField();
        tfCep = new javax.swing.JFormattedTextField();
        tfCpfCnpj = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/blicon.png")).getImage());
        setResizable(false);

        tfPesquisaCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfPesquisaClienteFocusLost(evt);
            }
        });
        tfPesquisaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPesquisaClienteKeyReleased(evt);
            }
        });

        btPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-binóculos-filled-50.png"))); // NOI18N
        btPesquisaCliente.setText("Pesquisar");
        btPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome:");

        tfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomeFocusLost(evt);
            }
        });

        jLabel2.setText("Endereço:");

        tfEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEnderecoFocusLost(evt);
            }
        });

        tfBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfBairroFocusLost(evt);
            }
        });

        jLabel3.setText("Bairro:");

        jLabel4.setText("Cidade:");

        jLabel5.setText("UF:");

        jLabel6.setText("CEP:");

        jLabel7.setText("Telefone:");

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-editar-filled-50.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-fechar-janela-filled-50.png"))); // NOI18N
        btCancelar.setText("Limpar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-salvar-filled-50.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        tbClientes.setAutoCreateRowSorter(true);
        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "CPF/CNPJ", "Ativo", "Tipo", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbClientes);
        if (tbClientes.getColumnModel().getColumnCount() > 0) {
            tbClientes.getColumnModel().getColumn(0).setMinWidth(60);
            tbClientes.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbClientes.getColumnModel().getColumn(1).setMinWidth(230);
            tbClientes.getColumnModel().getColumn(1).setPreferredWidth(230);
            tbClientes.getColumnModel().getColumn(1).setMaxWidth(230);
            tbClientes.getColumnModel().getColumn(2).setMinWidth(100);
            tbClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbClientes.getColumnModel().getColumn(3).setMinWidth(60);
            tbClientes.getColumnModel().getColumn(3).setPreferredWidth(60);
            tbClientes.getColumnModel().getColumn(5).setMinWidth(150);
            tbClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        tfCodigo.setEditable(false);
        tfCodigo.setEnabled(false);

        jLabel8.setText("Código:");

        cbEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbEstadoFocusLost(evt);
            }
        });
        cbEstado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbEstadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btNovaCidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        btNovaCidade.setText("Cidade");
        btNovaCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovaCidadeActionPerformed(evt);
            }
        });

        jlcpf.setText("CPF/CNPJ:");

        jLabel10.setText("Observação:");

        tfObservacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfObservacaoFocusLost(evt);
            }
        });

        jLabel11.setText("Pesquisar cliente na tabela:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-impressão-filled-50.png"))); // NOI18N
        jButton1.setText("Imprimir cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcbAtivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inativo", "Ativo" }));

        jcbTipoPessoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fisica", "Juridica" }));
        jcbTipoPessoa.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbTipoPessoaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jlNomeFantasia.setText("Nome fantasia");

        jtfNomeFantasia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeFantasiaFocusLost(evt);
            }
        });

        jLabel12.setText("Tipo de pessoa:");

        jLabel14.setText("Situação:");

        try {
            tfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfCpfCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNomeFantasia)
                            .addComponent(jtfNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfEndereco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btNovaCidade))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfPesquisaCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btPesquisaCliente))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jcbTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlcpf))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(25, 27, Short.MAX_VALUE))
                                    .addComponent(jcbAtivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(tfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(tfObservacao))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jlcpf)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlNomeFantasia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26))
                    .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btNovaCidade)
                            .addComponent(tfPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPesquisaCliente)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAlterar)
                    .addComponent(btCancelar)
                    .addComponent(btSalvar)
                    .addComponent(jbExcluir)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    /**
     * Preencher combobox estados
     */
    private void listarEstados() {
        listaEstados = EstadoController.getListaEstadoController();
        cbEstado.removeAllItems();
        for (int i = 0; i < listaEstados.size(); i++) {
            cbEstado.addItem(listaEstados.get(i).getUf());
        }
    }

    /**
     * Preencher combobox cidades
     */
    private void listarCidades() {
        try {
            listaCidades = controllerCidade.getListaCidadePorEstadoController(EstadoController.getEstadoUFController(this.cbEstado.getSelectedItem().toString()).getCodigo());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Você deve cadastrar cidades e estados primeiro!");
        }
        cbCidade.removeAllItems();
        for (int i = 0; i < listaCidades.size(); i++) {
            cbCidade.addItem(listaCidades.get(i).getNome());
        }
    }

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        limparCampos();
        recuperarCliente();
        tipoCadastro = "alteracao";
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (tipoCadastro.equals("novo")) {
            salvarCliente();
            validarTipoPessoa();
        } else if (tipoCadastro.equals("alteracao")) {
            alteraCliente();
            validarTipoPessoa();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private boolean alteraCliente() {
        modelCliente.setCodigo(Integer.parseInt(this.tfCodigo.getText()));
        if (jcbTipoPessoa.getSelectedIndex() == 0) {
            modelCliente.setTipoPessoa("F");
        } else {
            modelCliente.setTipoPessoa("J");
        }
        modelCliente.setNomeFantasia(this.jtfNomeFantasia.getText());
        modelCliente.setNome(this.tfNome.getText());
        modelCliente.setEndereco(this.tfEndereco.getText());
        modelCliente.setBairro(this.tfBairro.getText());
        if (this.cbCidade.getItemCount() == 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um estado e uma cidade!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            modelCliente.setCodCidade(controllerCidade.getCidadeController(this.cbCidade.getSelectedItem().toString()).getCodigo());
            modelCliente.setCep(this.tfCep.getText());
            modelCliente.setTelefone(this.tfTelefone.getText());
            modelCliente.setCpfCNPJ(this.tfCpfCnpj.getText());
            modelCliente.setObservacao(this.tfObservacao.getText());
            modelCliente.setAtivo(this.jcbAtivo.getSelectedIndex());

            //alterar 
            if (controllerCliente.atualizarClienteController(modelCliente)) {
                JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
                this.limparCampos();
                this.carregarClientes();
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }

    private boolean salvarCliente() {
        if (jcbTipoPessoa.getSelectedIndex() == 0) {
            modelCliente.setTipoPessoa("F");
        } else {
            modelCliente.setTipoPessoa("J");
        }
        modelCliente.setNomeFantasia(this.jtfNomeFantasia.getText());
        modelCliente.setNome(this.tfNome.getText());
        modelCliente.setEndereco(this.tfEndereco.getText());
        modelCliente.setBairro(this.tfBairro.getText());
        if (this.cbCidade.getItemCount() == 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um estado e uma cidade!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            modelCliente.setCodCidade(controllerCidade.getCidadeController(this.cbCidade.getSelectedItem().toString()).getCodigo());
            modelCliente.setCodEstado(EstadoController.getEstadoUFController(this.cbEstado.getSelectedItem().toString()).getCodigo());
            modelCliente.setCep(this.tfCep.getText());
            modelCliente.setTelefone(this.tfTelefone.getText());
            modelCliente.setCpfCNPJ(this.tfCpfCnpj.getText());
            modelCliente.setObservacao(this.tfObservacao.getText());
            modelCliente.setAtivo(this.jcbAtivo.getSelectedIndex());

            //salvar 
            if (controllerCliente.salvarClienteController(modelCliente) > 0) {
                JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
                this.limparCampos();
                this.carregarClientes();
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }

    private boolean recuperarCliente() {
        //recebe a linha selecionada
        int linha = this.tbClientes.getSelectedRow();

        //pega o codigo do cliente na linha selecionada
        int codigo = (Integer) tbClientes.getValueAt(linha, 0);

        try {
            //recupera os dados do banco
            modelCliente = controllerCliente.getClienteController(codigo);
            //seta os dados na interface
            if (modelCliente.getTipoPessoa().equals("F")) {
                this.jcbTipoPessoa.setSelectedIndex(0);
            } else {
                this.jcbTipoPessoa.setSelectedIndex(1);
            }
            this.tfCodigo.setText(String.valueOf(modelCliente.getCodigo()));
            this.tfNome.setText(modelCliente.getNome());
            this.jtfNomeFantasia.setText(modelCliente.getNomeFantasia());
            this.tfEndereco.setText(modelCliente.getEndereco());
            this.tfBairro.setText(modelCliente.getBairro());
            this.cbEstado.setSelectedItem(tbClientes.getValueAt(linha, 6));
            this.listarCidades();
            this.cbCidade.setSelectedItem(controllerCidade.getCidadeController(modelCliente.getCodCidade()).getNome());
            this.tfCep.setText(modelCliente.getCep());
            this.tfTelefone.setText(modelCliente.getTelefone());
            this.tfObservacao.setText(modelCliente.getObservacao());
            this.jcbAtivo.setSelectedIndex(modelCliente.getAtivo());
            validarTipoPessoa();
            this.tfCpfCnpj.setText(modelCliente.getCpfCNPJ());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    private void carregarClientes() {
        listaClienteCidadeEstados = controllerClienteCidadeEstado.getListaClienteCidadeEstadoController();
        DefaultTableModel modelo = (DefaultTableModel) tbClientes.getModel();
        modelo.setNumRows(0);
        String ativo = "";
        String tipo = "";
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaClienteCidadeEstados.size();
        for (int i = 0; i < cont; i++) {
            if (listaClienteCidadeEstados.get(i).getCliente().getAtivo() == 1) {
                ativo = "SIM";
            } else {
                ativo = "NAO";
            }
            if (listaClienteCidadeEstados.get(i).getCliente().getTipoPessoa().equals("F")) {
                tipo = "FISICA";
            } else {
                tipo = "JURIDICA";
            }
            modelo.addRow(new Object[]{
                listaClienteCidadeEstados.get(i).getCliente().getCodigo(),
                listaClienteCidadeEstados.get(i).getCliente().getNome(),
                listaClienteCidadeEstados.get(i).getCliente().getCpfCNPJ(),
                ativo,
                tipo,
                listaClienteCidadeEstados.get(i).getCidade().getNome(),
                listaClienteCidadeEstados.get(i).getEstado().getUf()
            });
        }
    }

    private void limparCampos() {
        this.listarEstados();
        this.listarCidades();
        jcbAtivo.setSelectedIndex(1);
        tfCodigo.setText("Novo");
        tfNome.setText("");
        tfEndereco.setText("");
        tfBairro.setText("");
        cbEstado.setSelectedIndex(0);
        tfCep.setText("");
        tfTelefone.setText("");
        tfCpfCnpj.setText("");
        tfObservacao.setText("");
        tipoCadastro = "novo";
        jcbTipoPessoa.setSelectedIndex(0);
        validarTipoPessoa();
    }

    protected boolean verificarCampos() {
        if (!tfNome.getText().trim().equals("")) {
            return true;
        }
        return false;
    }


    private void btPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaClienteActionPerformed
        //filtrar dados na tabela
        DefaultTableModel tabela = (DefaultTableModel) this.tbClientes.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela);
        this.tbClientes.setRowSorter(sorter);
        String text = tfPesquisaCliente.getText();
        sorter.setRowFilter(RowFilter.regexFilter(text, 1));
    }//GEN-LAST:event_btPesquisaClienteActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = tbClientes.getSelectedRow();
        String nome = (String) tbClientes.getValueAt(linha, 1);
        int codigo = (int) tbClientes.getValueAt(linha, 0);

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro:\n" + "\n " + nome + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (codigo == 1) {
            JOptionPane.showMessageDialog(this, "Você não pode excluir o cliente padrão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            if (opcao == JOptionPane.OK_OPTION) {
                if (controllerCliente.excluirClienteController(codigo)) {
                    JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                    carregarClientes();
                    this.limparCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Você não pode excluir um cliente já vinculada a uma venda! \n"
                            + "Para excluir o cliente, delete primeiro (a)s vendas(s) viculada(s) a ele.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void tfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusLost
        //tira acentos
        this.tfNome.setText(bLMascaras.TiraAcentos(tfNome.getText()));
        // converte em maiusculo o que o usuario digitar
        this.tfNome.setText(tfNome.getText().toUpperCase());
    }//GEN-LAST:event_tfNomeFocusLost

    private void cbEstadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbEstadoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbEstado.isPopupVisible()) {
            listarCidades();
        }
    }//GEN-LAST:event_cbEstadoPopupMenuWillBecomeInvisible

    private void btNovaCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovaCidadeActionPerformed
        // TODO add your handling code here:
        new ViewCidade().setVisible(true);
    }//GEN-LAST:event_btNovaCidadeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int linhaSelecionada = tbClientes.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            final AguardeGerandoRelatorio carregando = new AguardeGerandoRelatorio();
            final ClienteController controllerCliente = new ClienteController();
            carregando.setVisible(true);
            Thread t = new Thread() {
                @Override
                public void run() {
                    // imprimir clientes
                    controllerCliente.gerarRelatorioClienteIndividual((int) tbClientes.getValueAt(tbClientes.getSelectedRow(), 0));
                    carregando.dispose();
                }
            };
            t.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcbTipoPessoaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbTipoPessoaPopupMenuWillBecomeInvisible
        if (this.jcbTipoPessoa.isPopupVisible()) {
            //testa pf ou pj
            validarTipoPessoa();
        }
    }//GEN-LAST:event_jcbTipoPessoaPopupMenuWillBecomeInvisible

    private void cbEstadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbEstadoFocusLost
        // TODO add your handling code here:
        listarCidades();
    }//GEN-LAST:event_cbEstadoFocusLost

    private void jtfNomeFantasiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeFantasiaFocusLost
        // converte em maiusculo o que o usuario digitar
        this.jtfNomeFantasia.setText(jtfNomeFantasia.getText().toUpperCase());
        //tira acentos
        this.jtfNomeFantasia.setText(bLMascaras.TiraAcentos(jtfNomeFantasia.getText()));
    }//GEN-LAST:event_jtfNomeFantasiaFocusLost

    private void tfEnderecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEnderecoFocusLost
        // converte em maiusculo o que o usuario digitar
        this.tfEndereco.setText(tfEndereco.getText().toUpperCase());
        //tira acentos
        this.tfEndereco.setText(bLMascaras.TiraAcentos(tfEndereco.getText()));
    }//GEN-LAST:event_tfEnderecoFocusLost

    private void tfBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBairroFocusLost
        // converte em maiusculo o que o usuario digitar
        this.tfBairro.setText(tfBairro.getText().toUpperCase());
        //tira acentos
        this.tfBairro.setText(bLMascaras.TiraAcentos(tfBairro.getText()));
    }//GEN-LAST:event_tfBairroFocusLost

    private void tfObservacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfObservacaoFocusLost
        // converte em maiusculo o que o usuario digitar
        this.tfObservacao.setText(tfObservacao.getText().toUpperCase());
        //tira acentos
        this.tfObservacao.setText(bLMascaras.TiraAcentos(tfObservacao.getText()));
    }//GEN-LAST:event_tfObservacaoFocusLost

    private void tfPesquisaClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPesquisaClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPesquisaClienteFocusLost

    private void tfPesquisaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaClienteKeyReleased
        //tira acentos
        this.tfPesquisaCliente.setText(bLMascaras.TiraAcentos(tfPesquisaCliente.getText()));
        // converte em maiusculo o que o usuario digitar
        this.tfPesquisaCliente.setText(tfPesquisaCliente.getText().toUpperCase());
    }//GEN-LAST:event_tfPesquisaClienteKeyReleased

    private void validarTipoPessoa() {
        //testa pf ou pj
        tfCpfCnpj.setText("");
        tfCpfCnpj.setValue(null);
        if (jcbTipoPessoa.getSelectedIndex() == 0) {
            try {
                tfCpfCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
                jlNomeFantasia.setText("Apelido");
            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        } else {
            try {
                tfCpfCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
                jlNomeFantasia.setText("Nome Fantasia");
            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btNovaCidade;
    private javax.swing.JButton btPesquisaCliente;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JComboBox cbEstado;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JComboBox<String> jcbAtivo;
    private javax.swing.JComboBox<String> jcbTipoPessoa;
    private javax.swing.JLabel jlNomeFantasia;
    private javax.swing.JLabel jlcpf;
    private javax.swing.JTextField jtfNomeFantasia;
    private javax.swing.JTable tbClientes;
    protected javax.swing.JTextField tfBairro;
    private javax.swing.JFormattedTextField tfCep;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JFormattedTextField tfCpfCnpj;
    protected javax.swing.JTextField tfEndereco;
    protected javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfObservacao;
    protected javax.swing.JTextField tfPesquisaCliente;
    private javax.swing.JTextField tfTelefone;
    // End of variables declaration//GEN-END:variables

}
