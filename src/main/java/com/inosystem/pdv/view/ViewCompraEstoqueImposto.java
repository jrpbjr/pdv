/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inosystem.pdv.view;

import controller.ControllerCompras;
import controller.ControllerComprasProdutos;
import controller.ControllerFornecedor;
import controller.ControllerProdutos;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCompras;
import model.ModelComprasProdutos;
import model.ModelFornecedor;
import model.ModelProdutos;
import util.AguardeGerandoRelatorio;
import util.BLMascaras;

/**
 *
 * @author Jrpbjr
 */
public class ViewCompraEstoqueImposto extends javax.swing.JFrame {

    ModelProdutos modelProdutos = new ModelProdutos();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelFornecedor> listaFornecedor = new ArrayList<ModelFornecedor>();
    ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
    BLMascaras bLMascaras = new BLMascaras();
    ControllerCompras controllerCompras = new ControllerCompras();
    ModelCompras modelCompras = new ModelCompras();
    ControllerComprasProdutos controllerComprasProdutos = new ControllerComprasProdutos();
    ModelComprasProdutos modelComprasProdutos = new ModelComprasProdutos();
    ArrayList<ModelComprasProdutos> listaModelComprasProdutoses = new ArrayList<>();
    ArrayList<ModelCompras> listaModelComprases = new ArrayList<>();

    /**
     * Creates new form ViewComprasProdutos
     */
    public ViewCompraEstoqueImposto() {
        initComponents();
        setLocationRelativeTo(null);
        carregarCompras();
        limparDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cbCodProduto = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbProdutos = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfValorTotal = new javax.swing.JTextField();
        tfValorCusto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfValorVenda = new javax.swing.JTextField();
        tfEstoque = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        tfValorTotalCompra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtfCodigoNCM = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfTipoNCM = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfCodEspecSit = new javax.swing.JFormattedTextField();
        jtfCstICMS = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfICMS = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfICMSRED = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jtfCstIPI = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jtfIPI = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtfCtsPis = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jtfPis = new javax.swing.JFormattedTextField();
        jtfCSTCofins = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jtfCofins = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCompras = new javax.swing.JTable();
        btCancelar1 = new javax.swing.JButton();
        btExcluir1 = new javax.swing.JButton();
        jbimprimir = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compras/estoque/imposto");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/blicon.png")).getImage());

        cbCodProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbCodProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel1.setText("Cod. Prod.");

        cbProdutos.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbProdutosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Descrição do Produtos");

        jLabel5.setText("Add. Estoque");

        jLabel6.setText("Valor total custo");

        tfValorTotal.setEditable(false);

        tfValorCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfValorCustoFocusLost(evt);
            }
        });
        tfValorCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfValorCustoKeyReleased(evt);
            }
        });

        jLabel3.setText("Valor custo");

        jLabel4.setText("Valor venda");

        tfValorVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfValorVendaKeyReleased(evt);
            }
        });

        tfEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEstoqueFocusLost(evt);
            }
        });
        tfEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfEstoqueKeyReleased(evt);
            }
        });

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Custo", "Venda", "Quantidade", "Total C.", "NCM", "Tipo NCM", "Esp.Sit.Trib.", "CST ICMS", "ICMS", "ICMS Red", "CST IPI", "IPI", "CTS PIS", "PIS", "CST Cofins", "Cofins"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(1).setMinWidth(200);
            tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-fechar-janela-filled-50.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-salvar-filled-50.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jLabel7.setText("Valor total C.");

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        btAdicionar.setText("Adicionar alterações");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        jLabel8.setText("NCM");

        jtfCodigoNCM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel9.setText("Tipo NCM");

        jLabel10.setText("Espec.Sit.Tribut.");

        jtfCodEspecSit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jtfCstICMS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel11.setText("CST ICMS(xxx)");

        jLabel12.setText("% ICMS");

        jLabel13.setText("% ICMS(RED)");

        jLabel14.setText("CST IPI(xx)");

        jLabel15.setText("%IPI");

        jLabel16.setText("CST PIS(xx)");

        jLabel17.setText("% PIS");

        try {
            jtfCSTCofins.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("CST Cofins(xx)");

        jLabel19.setText("% Cofins");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 367, Short.MAX_VALUE))
                            .addComponent(cbProdutos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(tfValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(tfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(tfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btCancelar)
                                        .addGap(1, 1, 1)
                                        .addComponent(btExcluir)
                                        .addGap(201, 201, 201)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(104, 104, 104)
                                                .addComponent(jbSalvar))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfValorTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfCstIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCtsPis, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jtfPis, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel19))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jtfCSTCofins, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfCofins, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCodigoNCM, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jtfTipoNCM, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfCodEspecSit)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfCstICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfICMSRED, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoNCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTipoNCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodEspecSit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCstICMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfICMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfICMSRED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCtsPis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCSTCofins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCofins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCstIPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfIPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdicionar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfValorTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancelar)
                    .addComponent(btExcluir)
                    .addComponent(jbSalvar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        tbCompras.setAutoCreateRowSorter(true);
        tbCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Código", "Data", "Valor total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCompras.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbCompras.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbCompras);

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-fechar-janela-filled-50.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        btExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        btExcluir1.setText("Excluir");
        btExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir1ActionPerformed(evt);
            }
        });

        jbimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jbimprimir.setText("Imprimir");
        jbimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btCancelar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btExcluir1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbimprimir)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar1)
                    .addComponent(btExcluir1)
                    .addComponent(jbimprimir))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCodProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbCodProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbCodProduto.isPopupVisible()) {
            modelProdutos = controllerProdutos.getProdutosController(Integer.parseInt(cbCodProduto.getSelectedItem().toString()));
            //recupera o código
            this.cbProdutos.setSelectedItem(String.valueOf(modelProdutos.getNome()));
            this.tfValorVenda.setText(String.valueOf(modelProdutos.getValor()));
            this.tfValorCusto.setText(String.valueOf(modelProdutos.getValorCusto()));
            this.tfEstoque.setText("0");
            this.tfValorTotal.setText(String.valueOf(Double.parseDouble(tfValorCusto.getText())
                    * Double.parseDouble(tfEstoque.getText())));
        }
    }//GEN-LAST:event_cbCodProdutoPopupMenuWillBecomeInvisible

    private void cbProdutosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbProdutosPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbProdutos.isPopupVisible()) {
            modelProdutos = controllerProdutos.getProdutosController(cbProdutos.getSelectedItem().toString());
            //recupera o código
            this.cbCodProduto.setSelectedItem(modelProdutos.getCodigo());
            this.jtfCodigoNCM.setText(String.valueOf(modelProdutos.getNcm()));
            this.jtfTipoNCM.setText(String.valueOf(modelProdutos.getTipoNcm()));
            this.jtfCodEspecSit.setText(String.valueOf(modelProdutos.getSubTribut()));
            this.jtfCstICMS.setText(String.valueOf(modelProdutos.getIcmsCst()));
            this.jtfICMS.setText(String.valueOf(modelProdutos.getIcms()));
            this.jtfICMSRED.setText(String.valueOf(modelProdutos.getIcmsRed()));
            this.jtfCstIPI.setText(String.valueOf(modelProdutos.getIpiCst()));
            this.jtfIPI.setText(String.valueOf(modelProdutos.getIpi()));
            this.jtfCtsPis.setText(String.valueOf(modelProdutos.getPisCst()));
            this.jtfPis.setText(String.valueOf(modelProdutos.getPis()));
            this.jtfCSTCofins.setText(String.valueOf(modelProdutos.getCofinsCst()));
            this.jtfCofins.setText(String.valueOf(modelProdutos.getCofins()));
            this.tfValorVenda.setText(String.valueOf(modelProdutos.getValor()));
            this.tfValorCusto.setText(String.valueOf(modelProdutos.getValorCusto()));
            this.tfEstoque.setText("0");
            this.tfValorTotal.setText(String.valueOf(Double.parseDouble(tfValorVenda.getText())
                    * Double.parseDouble(tfEstoque.getText())));
        }
    }//GEN-LAST:event_cbProdutosPopupMenuWillBecomeInvisible

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // para excluir a linha
        int linhaSelecionada = tbProdutos.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            // Obtem o modelo da JTable
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            // Remove a linha
            modelo.removeRow(linhaSelecionada);
            this.tfValorTotal.setText(String.valueOf(this.somaEAtualizaValorTotal()));
        }
        //somar e atualizar valor total
        this.tfValorTotalCompra.setText(String.valueOf(this.somaEAtualizaValorTotal()));
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.limparDados();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if (tbProdutos.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Você deve preencher inserir dados na tabela para salvar!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelCompras = new ModelCompras();
            listaModelProdutos = new ArrayList<>();

            modelCompras.setValorTotal(Double.parseDouble(tfValorTotalCompra.getText()));
            try {
                modelCompras.setData(bLMascaras.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            } catch (Exception ex) {
                Logger.getLogger(ViewVenda.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (int i = 0; i < tbProdutos.getRowCount(); i++) {
                modelProdutos = new ModelProdutos();
                modelComprasProdutos = new ModelComprasProdutos();
                modelProdutos.setCodigo(Integer.parseInt(tbProdutos.getValueAt(i, 0).toString()));
                modelProdutos.setValorCusto(Double.parseDouble(tbProdutos.getValueAt(i, 2).toString()));
                modelProdutos.setValor(Double.parseDouble(tbProdutos.getValueAt(i, 3).toString()));
                modelProdutos.setEstoque(Float.parseFloat(tbProdutos.getValueAt(i, 4).toString()));
                modelProdutos.setNcm(String.valueOf(tbProdutos.getValueAt(i, 6).toString()));
                modelProdutos.setTipoNcm(String.valueOf(tbProdutos.getValueAt(i, 7).toString()));
                modelProdutos.setSubTribut(Double.parseDouble(tbProdutos.getValueAt(i, 8).toString()));
                modelProdutos.setIcmsCst(Double.parseDouble(tbProdutos.getValueAt(i, 9).toString()));
                modelProdutos.setIcms(Double.parseDouble(tbProdutos.getValueAt(i, 10).toString()));
                modelProdutos.setIcmsRed(Double.parseDouble(tbProdutos.getValueAt(i, 11).toString()));
                modelProdutos.setIpiCst(String.valueOf(tbProdutos.getValueAt(i, 12).toString()));
                modelProdutos.setIpi(Double.parseDouble(tbProdutos.getValueAt(i, 13).toString()));
                modelProdutos.setPisCst(String.valueOf(tbProdutos.getValueAt(i, 14).toString()));
                modelProdutos.setPis(Double.parseDouble(tbProdutos.getValueAt(i, 15).toString()));
                modelProdutos.setCofinsCst(String.valueOf(tbProdutos.getValueAt(i, 16).toString()));
                modelProdutos.setCofins(Double.parseDouble(tbProdutos.getValueAt(i, 17).toString()));
                //add o estoque
                modelProdutos.setAddEstoque(controllerProdutos.getProdutosController(modelProdutos.getCodigo()).getEstoque() + modelProdutos.getEstoque());
                modelComprasProdutos.setModelProdutos(modelProdutos);

                listaModelComprasProdutoses.add(modelComprasProdutos);
            }
            modelComprasProdutos.setListaModelComprasProdutos(listaModelComprasProdutoses);

            //salvar venda
            int codigoCompra = controllerCompras.salvarComprasController(modelCompras);
            if (codigoCompra > 0) {
                modelComprasProdutos.setCodCompras(codigoCompra);
                //salvar lista de produtos
                controllerComprasProdutos.salvarcompras_produtosController(modelComprasProdutos);
                //adicionar produtos ao estoque
                controllerProdutos.atualizarProdutosQuantidadeValorController(listaModelComprasProdutoses);
                JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
                //limpar dados e preparar tela
                limparDados();
//                jbSalvar.setEnabled(false);
                this.carregarCompras();
                //avançar para aba 2
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() + 1);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void btExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir1ActionPerformed
        int linha = tbCompras.getSelectedRow();
        int codigo = (int) tbCompras.getValueAt(linha, 0);
        listaModelComprasProdutoses = new ArrayList<>();

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro:\n" + "\n " + 0 + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerCompras.excluirComprasController(codigo)) {
                listaModelComprasProdutoses = controllerComprasProdutos.getListacompras_produtosController(codigo);
                if (controllerComprasProdutos.excluircompras_produtosController(codigo)) {
                    JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                    removeEstoque(listaModelComprasProdutoses);
                    //remover produtos do estoque
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                carregarCompras();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btExcluir1ActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        float valorCusto, valorVenda;
        valorCusto = Float.parseFloat(this.tfValorCusto.getText());
        valorVenda = Float.parseFloat(this.tfValorVenda.getText());

        if (tfValorCusto.getText().equals("") || tfValorVenda.getText().equals("") || tfEstoque.getText().equals("") || valorCusto > valorVenda) {
            JOptionPane.showMessageDialog(rootPane, "Você deve preencher todos os campos! \n"
                    + "Valor de custo não pode ser maior que o valor de venda!");
        } else {
            //Adiciona linhas na tabela
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            int cont = 0;
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            //pega a quantidade de linhas e joga na variavel
            modelo.addRow(new Object[]{
                cbCodProduto.getSelectedItem().toString(),
                this.cbProdutos.getSelectedItem().toString(),
                this.tfValorCusto.getText(),
                this.tfValorVenda.getText(),
                this.tfEstoque.getText(),
                this.tfValorTotal.getText(),
                this.jtfCodigoNCM.getText(),
                this.jtfTipoNCM.getText(),
                this.jtfCodEspecSit.getText(),
                this.jtfCstICMS.getText(),
                this.jtfICMS.getText(),
                this.jtfICMSRED.getText(),
                this.jtfCstIPI.getText(),
                this.jtfIPI.getText(),
                this.jtfCtsPis.getText(),
                this.jtfPis.getText(),
                this.jtfCSTCofins.getText(),
                this.jtfCofins.getText()
            });
        }
        //somar e atualizar valor total
        this.tfValorTotalCompra.setText(String.valueOf(this.somaEAtualizaValorTotal()));
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void tfValorCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfValorCustoFocusLost
        // TODO add your handling code here:
        tfValorTotal.setText(calcularValorproduto(this.tfValorCusto.getText(), this.tfEstoque.getText()));
    }//GEN-LAST:event_tfValorCustoFocusLost

    private void tfEstoqueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEstoqueFocusLost
        // TODO add your handling code here:
        tfValorTotal.setText(calcularValorproduto(this.tfValorCusto.getText(), this.tfEstoque.getText()));
    }//GEN-LAST:event_tfEstoqueFocusLost

    private void tfValorCustoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfValorCustoKeyReleased
        this.tfValorCusto.setText(new BLMascaras().converterVirgulaParaPonto(this.tfValorCusto.getText()));
    }//GEN-LAST:event_tfValorCustoKeyReleased

    private void tfValorVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfValorVendaKeyReleased
        this.tfValorVenda.setText(new BLMascaras().converterVirgulaParaPonto(this.tfValorVenda.getText()));
    }//GEN-LAST:event_tfValorVendaKeyReleased

    private void tfEstoqueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEstoqueKeyReleased
        this.tfEstoque.setText(new BLMascaras().converterVirgulaParaPonto(this.tfEstoque.getText()));
    }//GEN-LAST:event_tfEstoqueKeyReleased

    private void jbimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbimprimirActionPerformed
        final AguardeGerandoRelatorio carregando = new AguardeGerandoRelatorio();
        final ControllerCompras controllerCompras = new ControllerCompras();
        carregando.setVisible(true);
        Thread t = new Thread() {
            @Override
            public void run() {
                // imprimir
                int linha = tbCompras.getSelectedRow();
                int codigo = (int) tbCompras.getValueAt(linha, 0);
                controllerCompras.gerarRelatorioCompraController(codigo);
                carregando.dispose();
            }
        };
        t.start();
    }//GEN-LAST:event_jbimprimirActionPerformed

    /**
     * remove os produtos do estoque
     *
     * @param pCodigoProduto
     */
    private void removeEstoque(ArrayList<ModelComprasProdutos> pListaComprasProdutos) {
        float quantidade;
        listaModelProdutos = new ArrayList<>();
        System.err.println(pListaComprasProdutos.size());
        int cont = pListaComprasProdutos.size();
        for (int i = 0; i < cont; i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setCodigo(pListaComprasProdutos.get(i).getCodProduto());
            quantidade = controllerProdutos.getProdutosController(modelProdutos.getCodigo()).getEstoque() - pListaComprasProdutos.get(i).getQuantidade();
            modelProdutos.setEstoque(quantidade);
            modelProdutos.setValorCusto(pListaComprasProdutos.get(i).getValorCusto());
            modelProdutos.setValor(pListaComprasProdutos.get(i).getValorVenda());
            listaModelProdutos.add(modelProdutos);
        }
        modelProdutos.setListaModelProdutoses(listaModelProdutos);
        controllerProdutos.atualizarProdutosEstoqueController(modelProdutos);
    }

    private void limparDados() {
        listarCodigoProdutos();
        listarProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        tfValorTotalCompra.setText("0");
    }

    private void carregarCompras() {
        listaModelComprases = controllerCompras.getListaComprasController();
        DefaultTableModel modelo = (DefaultTableModel) tbCompras.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaModelComprases.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelComprases.get(i).getCodigo(),
                bLMascaras.formatarData(listaModelComprases.get(i).getData()),
                listaModelComprases.get(i).getValorTotal()
            });
        }
    }

    // calcula o valor total do produto com quantidade
    private String calcularValorproduto(String pValorUnitario, String pQuantidade) {
        Double valorTotal, valorUnitario = null, quantidade = null;
        try {
            valorUnitario = Double.parseDouble(pValorUnitario);
            quantidade = Double.parseDouble(pQuantidade);
        } catch (NumberFormatException e) {
            System.err.println(e + "Erro");
        }
        valorTotal = valorUnitario * quantidade;
        return bLMascaras.arredondamentoDoubleComPontoDuasCasasString(valorTotal);
    }

    /**
     * Soma e atualiza os valores total
     *
     * @return
     */
    private float somaEAtualizaValorTotal() {
        float soma = 0;
        float valor = 0;
        int cont = tbProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Float.parseFloat(String.valueOf(tbProdutos.getValueAt(i, 5)));
            soma = valor + soma;
        }
        return bLMascaras.arredondamentoComPontoDuasCasas(soma);
    }

    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutosAtivosController();
        cbProdutos.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            cbProdutos.addItem(listaModelProdutos.get(i).getNome());
        }
    }

    private void listarCodigoProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutosAtivosController();
        cbCodProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            cbCodProduto.addItem(listaModelProdutos.get(i).getCodigo());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCompraEstoqueImposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCompraEstoqueImposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCompraEstoqueImposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCompraEstoqueImposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCompraEstoqueImposto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btExcluir1;
    private javax.swing.JComboBox cbCodProduto;
    private javax.swing.JComboBox cbProdutos;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbimprimir;
    private javax.swing.JFormattedTextField jtfCSTCofins;
    private javax.swing.JFormattedTextField jtfCodEspecSit;
    private javax.swing.JFormattedTextField jtfCodigoNCM;
    private javax.swing.JFormattedTextField jtfCofins;
    private javax.swing.JFormattedTextField jtfCstICMS;
    private javax.swing.JFormattedTextField jtfCstIPI;
    private javax.swing.JFormattedTextField jtfCtsPis;
    private javax.swing.JFormattedTextField jtfICMS;
    private javax.swing.JFormattedTextField jtfICMSRED;
    private javax.swing.JTextField jtfIPI;
    private javax.swing.JFormattedTextField jtfPis;
    private javax.swing.JTextField jtfTipoNCM;
    private javax.swing.JTable tbCompras;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JTextField tfEstoque;
    private javax.swing.JTextField tfValorCusto;
    private javax.swing.JTextField tfValorTotal;
    private javax.swing.JTextField tfValorTotalCompra;
    private javax.swing.JTextField tfValorVenda;
    // End of variables declaration//GEN-END:variables
}
